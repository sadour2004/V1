{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar useBuiltInEventTarget = global.RN$useBuiltInEventTarget == null ? void 0 : global.RN$useBuiltInEventTarget();\nvar _default = exports.default = useBuiltInEventTarget ? require('./WebSocket_new').default : require('./WebSocket_old').default;","map":{"version":3,"names":["useBuiltInEventTarget","global","RN$useBuiltInEventTarget","_default","exports","default","require"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport typeof WebSocket from './WebSocket_old';\n\n// Use a global instead of a flag from ReactNativeFeatureFlags because this will\n// be read before apps have a chance to set overrides.\nconst useBuiltInEventTarget = global.RN$useBuiltInEventTarget?.();\n\nexport default (useBuiltInEventTarget\n  ? // $FlowExpectedError[incompatible-cast]\n    require('./WebSocket_new').default\n  : require('./WebSocket_old').default) as WebSocket;\n"],"mappings":";;;;AAcA,IAAMA,qBAAqB,GAAGC,MAAM,CAACC,wBAAwB,oBAA/BD,MAAM,CAACC,wBAAwB,CAAG,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAElDL,qBAAqB,GAEjCM,OAAO,CAAC,iBAAiB,CAAC,CAACD,OAAO,GAClCC,OAAO,CAAC,iBAAiB,CAAC,CAACD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}