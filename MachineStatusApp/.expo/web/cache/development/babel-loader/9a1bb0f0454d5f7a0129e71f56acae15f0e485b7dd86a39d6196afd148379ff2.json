{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addException = addException;\nexports.addIgnorePatterns = addIgnorePatterns;\nexports.addLog = addLog;\nexports.checkWarningFilter = checkWarningFilter;\nexports.clear = clear;\nexports.clearErrors = clearErrors;\nexports.clearWarnings = clearWarnings;\nexports.dismiss = dismiss;\nexports.getAppInfo = getAppInfo;\nexports.getIgnorePatterns = getIgnorePatterns;\nexports.isDisabled = isDisabled;\nexports.isLogBoxErrorMessage = isLogBoxErrorMessage;\nexports.isMessageIgnored = isMessageIgnored;\nexports.observe = observe;\nexports.reportLogBoxError = reportLogBoxError;\nexports.retrySymbolicateLogNow = retrySymbolicateLogNow;\nexports.setAppInfo = setAppInfo;\nexports.setDisabled = setDisabled;\nexports.setSelectedLog = setSelectedLog;\nexports.setWarningFilter = setWarningFilter;\nexports.symbolicateLogLazy = symbolicateLogLazy;\nexports.symbolicateLogNow = symbolicateLogNow;\nexports.withSubscription = withSubscription;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _FuseboxSessionObserver = _interopRequireDefault(require(\"../../../src/private/debugging/FuseboxSessionObserver\"));\nvar _parseErrorStack = _interopRequireDefault(require(\"../../Core/Devtools/parseErrorStack\"));\nvar _NativeDevSettings = _interopRequireDefault(require(\"../../NativeModules/specs/NativeDevSettings\"));\nvar _NativeLogBox = _interopRequireDefault(require(\"../../NativeModules/specs/NativeLogBox\"));\nvar _LogBoxLog = _interopRequireDefault(require(\"./LogBoxLog\"));\nvar _parseLogBoxLog = require(\"./parseLogBoxLog\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js\";\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar observers = new Set();\nvar ignorePatterns = new Set();\nvar appInfo = null;\nvar logs = new Set();\nvar updateTimeout = null;\nvar _isDisabled = false;\nvar _selectedIndex = -1;\nvar hasShownFuseboxWarningsMigrationMessage = false;\nvar hostTargetSessionObserverSubscription = null;\nvar warningFilter = function warningFilter(format) {\n  return {\n    finalFormat: format,\n    forceDialogImmediately: false,\n    suppressDialog_LEGACY: false,\n    suppressCompletely: false,\n    monitorEvent: 'warning_unhandled',\n    monitorListVersion: 0,\n    monitorSampleRate: 1\n  };\n};\nvar LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\nfunction getNextState() {\n  return {\n    logs: logs,\n    isDisabled: _isDisabled,\n    selectedLogIndex: _selectedIndex\n  };\n}\nfunction reportLogBoxError(error, componentStack) {\n  var ExceptionsManager = require('../../Core/ExceptionsManager').default;\n  error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n  if (componentStack != null) {\n    error.componentStack = componentStack;\n  }\n  ExceptionsManager.handleException(error, true);\n}\nfunction isLogBoxErrorMessage(message) {\n  return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n}\nfunction isMessageIgnored(message) {\n  for (var pattern of ignorePatterns) {\n    if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleUpdate() {\n  if (updateTimeout == null) {\n    updateTimeout = setImmediate(function () {\n      updateTimeout = null;\n      var nextState = getNextState();\n      observers.forEach(function (_ref) {\n        var observer = _ref.observer;\n        return observer(nextState);\n      });\n    });\n  }\n}\nfunction appendNewLog(newLog) {\n  if (isMessageIgnored(newLog.message.content)) {\n    return;\n  }\n  var lastLog = Array.from(logs).pop();\n  if (lastLog && lastLog.category === newLog.category) {\n    lastLog.incrementCount();\n    handleUpdate();\n    return;\n  }\n  if (newLog.level === 'fatal') {\n    var OPTIMISTIC_WAIT_TIME = 1000;\n    var _addPendingLog = function addPendingLog() {\n      logs.add(newLog);\n      if (_selectedIndex < 0) {\n        setSelectedLog(logs.size - 1);\n      } else {\n        handleUpdate();\n      }\n      _addPendingLog = null;\n    };\n    var optimisticTimeout = setTimeout(function () {\n      if (_addPendingLog) {\n        _addPendingLog();\n      }\n    }, OPTIMISTIC_WAIT_TIME);\n    newLog.symbolicate(function (status) {\n      if (_addPendingLog && status !== 'PENDING') {\n        _addPendingLog();\n        clearTimeout(optimisticTimeout);\n      } else if (status !== 'PENDING') {\n        handleUpdate();\n      }\n    });\n  } else if (newLog.level === 'syntax') {\n    logs.add(newLog);\n    setSelectedLog(logs.size - 1);\n  } else {\n    logs.add(newLog);\n    handleUpdate();\n  }\n}\nfunction addLog(log) {\n  if (hostTargetSessionObserverSubscription == null) {\n    hostTargetSessionObserverSubscription = _FuseboxSessionObserver.default.subscribe(function (hasActiveSession) {\n      if (hasActiveSession) {\n        clearWarnings();\n      } else {\n        hasShownFuseboxWarningsMigrationMessage = false;\n      }\n    });\n  }\n  if (log.level === 'warn' && global.__FUSEBOX_HAS_FULL_CONSOLE_SUPPORT__) {\n    if (!_FuseboxSessionObserver.default.hasActiveSession()) {\n      showFuseboxWarningsMigrationMessageOnce();\n    }\n    return;\n  }\n  var errorForStackTrace = new Error();\n  setImmediate(function () {\n    try {\n      var _log$stack;\n      var stack = (0, _parseErrorStack.default)((_log$stack = log.stack) != null ? _log$stack : errorForStackTrace == null ? void 0 : errorForStackTrace.stack);\n      appendNewLog(new _LogBoxLog.default({\n        level: log.level,\n        message: log.message,\n        isComponentError: false,\n        stack: stack,\n        category: log.category,\n        componentStack: log.componentStack,\n        componentStackType: log.componentStackType || 'legacy'\n      }));\n    } catch (error) {\n      reportLogBoxError(error);\n    }\n  });\n}\nfunction addException(error) {\n  setImmediate(function () {\n    try {\n      appendNewLog(new _LogBoxLog.default((0, _parseLogBoxLog.parseLogBoxException)(error)));\n    } catch (loggingError) {\n      reportLogBoxError(loggingError);\n    }\n  });\n}\nfunction symbolicateLogNow(log) {\n  log.symbolicate(function () {\n    handleUpdate();\n  });\n}\nfunction retrySymbolicateLogNow(log) {\n  log.retrySymbolicate(function () {\n    handleUpdate();\n  });\n}\nfunction symbolicateLogLazy(log) {\n  log.symbolicate();\n}\nfunction clear() {\n  if (logs.size > 0) {\n    logs = new Set();\n    setSelectedLog(-1);\n  }\n}\nfunction setSelectedLog(proposedNewIndex) {\n  var oldIndex = _selectedIndex;\n  var newIndex = proposedNewIndex;\n  var logArray = Array.from(logs);\n  var index = logArray.length - 1;\n  while (index >= 0) {\n    if (logArray[index].level === 'syntax') {\n      newIndex = index;\n      break;\n    }\n    index -= 1;\n  }\n  _selectedIndex = newIndex;\n  handleUpdate();\n  if (_NativeLogBox.default) {\n    setTimeout(function () {\n      if (oldIndex < 0 && newIndex >= 0) {\n        _NativeLogBox.default.show();\n      } else if (oldIndex >= 0 && newIndex < 0) {\n        _NativeLogBox.default.hide();\n      }\n    }, 0);\n  }\n}\nfunction clearWarnings() {\n  var newLogs = Array.from(logs).filter(function (log) {\n    return log.level !== 'warn';\n  });\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n    handleUpdate();\n  }\n}\nfunction clearErrors() {\n  var newLogs = Array.from(logs).filter(function (log) {\n    return log.level !== 'error' && log.level !== 'fatal';\n  });\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n  }\n}\nfunction dismiss(log) {\n  if (logs.has(log)) {\n    logs.delete(log);\n    handleUpdate();\n  }\n}\nfunction setWarningFilter(filter) {\n  warningFilter = filter;\n}\nfunction setAppInfo(info) {\n  appInfo = info;\n}\nfunction getAppInfo() {\n  return appInfo != null ? appInfo() : null;\n}\nfunction checkWarningFilter(format) {\n  return warningFilter(format);\n}\nfunction getIgnorePatterns() {\n  return Array.from(ignorePatterns);\n}\nfunction addIgnorePatterns(patterns) {\n  var existingSize = ignorePatterns.size;\n  patterns.forEach(function (pattern) {\n    if (pattern instanceof RegExp) {\n      for (var existingPattern of ignorePatterns) {\n        if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n          return;\n        }\n      }\n      ignorePatterns.add(pattern);\n    }\n    ignorePatterns.add(pattern);\n  });\n  if (ignorePatterns.size === existingSize) {\n    return;\n  }\n  logs = new Set(Array.from(logs).filter(function (log) {\n    return !isMessageIgnored(log.message.content);\n  }));\n  handleUpdate();\n}\nfunction setDisabled(value) {\n  if (value === _isDisabled) {\n    return;\n  }\n  _isDisabled = value;\n  handleUpdate();\n}\nfunction isDisabled() {\n  return _isDisabled;\n}\nfunction observe(observer) {\n  var subscription = {\n    observer: observer\n  };\n  observers.add(subscription);\n  observer(getNextState());\n  return {\n    unsubscribe: function unsubscribe() {\n      observers.delete(subscription);\n    }\n  };\n}\nfunction withSubscription(WrappedComponent) {\n  var LogBoxStateSubscription = function (_React$Component) {\n    function LogBoxStateSubscription() {\n      var _this;\n      (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, LogBoxStateSubscription, [].concat(args));\n      _this.state = {\n        logs: new Set(),\n        isDisabled: false,\n        hasError: false,\n        selectedLogIndex: -1\n      };\n      return _this;\n    }\n    (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n    return (0, _createClass2.default)(LogBoxStateSubscription, [{\n      key: \"componentDidCatch\",\n      value: function componentDidCatch(err, errorInfo) {\n        reportLogBoxError(err, errorInfo.componentStack);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        if (this.state.hasError) {\n          return null;\n        }\n        return (0, _jsxRuntime.jsx)(WrappedComponent, {\n          logs: Array.from(this.state.logs),\n          isDisabled: this.state.isDisabled,\n          selectedLogIndex: this.state.selectedLogIndex\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n        this._subscription = observe(function (data) {\n          _this2.setState(data);\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this._subscription != null) {\n          this._subscription.unsubscribe();\n        }\n      }\n    }], [{\n      key: \"getDerivedStateFromError\",\n      value: function getDerivedStateFromError() {\n        return {\n          hasError: true\n        };\n      }\n    }]);\n  }(React.Component);\n  return LogBoxStateSubscription;\n}\nfunction showFuseboxWarningsMigrationMessageOnce() {\n  if (hasShownFuseboxWarningsMigrationMessage) {\n    return;\n  }\n  hasShownFuseboxWarningsMigrationMessage = true;\n  appendNewLog(new _LogBoxLog.default({\n    level: 'warn',\n    message: {\n      content: 'Open debugger to view warnings.',\n      substitutions: []\n    },\n    isComponentError: false,\n    stack: [],\n    category: 'fusebox-warnings-migration',\n    componentStack: [],\n    onNotificationPress: function onNotificationPress() {\n      if (_NativeDevSettings.default.openDebugger) {\n        _NativeDevSettings.default.openDebugger();\n      }\n    }\n  }));\n}","map":{"version":3,"names":["_FuseboxSessionObserver","_interopRequireDefault","require","_parseErrorStack","_NativeDevSettings","_NativeLogBox","_LogBoxLog","_parseLogBoxLog","React","_interopRequireWildcard","_jsxRuntime","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","observers","Set","ignorePatterns","appInfo","logs","updateTimeout","_isDisabled","_selectedIndex","hasShownFuseboxWarningsMigrationMessage","hostTargetSessionObserverSubscription","warningFilter","format","finalFormat","forceDialogImmediately","suppressDialog_LEGACY","suppressCompletely","monitorEvent","monitorListVersion","monitorSampleRate","LOGBOX_ERROR_MESSAGE","getNextState","isDisabled","selectedLogIndex","reportLogBoxError","error","componentStack","ExceptionsManager","message","handleException","isLogBoxErrorMessage","includes","isMessageIgnored","pattern","RegExp","test","handleUpdate","setImmediate","nextState","forEach","_ref","observer","appendNewLog","newLog","content","lastLog","Array","from","pop","category","incrementCount","level","OPTIMISTIC_WAIT_TIME","addPendingLog","add","setSelectedLog","size","optimisticTimeout","setTimeout","symbolicate","status","clearTimeout","addLog","log","DebuggerSessionObserver","subscribe","hasActiveSession","clearWarnings","global","__FUSEBOX_HAS_FULL_CONSOLE_SUPPORT__","showFuseboxWarningsMigrationMessageOnce","errorForStackTrace","Error","_log$stack","stack","parseErrorStack","LogBoxLog","isComponentError","componentStackType","addException","parseLogBoxException","loggingError","symbolicateLogNow","retrySymbolicateLogNow","retrySymbolicate","symbolicateLogLazy","clear","proposedNewIndex","oldIndex","newIndex","logArray","index","length","NativeLogBox","show","hide","newLogs","filter","clearErrors","dismiss","delete","setWarningFilter","setAppInfo","info","getAppInfo","checkWarningFilter","getIgnorePatterns","addIgnorePatterns","patterns","existingSize","existingPattern","toString","setDisabled","value","observe","subscription","unsubscribe","withSubscription","WrappedComponent","LogBoxStateSubscription","_React$Component","_this","_classCallCheck2","_len","arguments","args","_key","concat","state","hasError","_inherits2","_createClass2","key","componentDidCatch","err","errorInfo","render","jsx","componentDidMount","_this2","_subscription","data","setState","componentWillUnmount","getDerivedStateFromError","Component","substitutions","onNotificationPress","NativeDevSettings","openDebugger"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {ExtendedError} from '../../Core/ExtendedError';\nimport type {LogLevel} from './LogBoxLog';\nimport type {\n  Category,\n  ComponentStack,\n  ComponentStackType,\n  ExtendedExceptionData,\n  Message,\n} from './parseLogBoxLog';\n\nimport DebuggerSessionObserver from '../../../src/private/debugging/FuseboxSessionObserver';\nimport parseErrorStack from '../../Core/Devtools/parseErrorStack';\nimport NativeDevSettings from '../../NativeModules/specs/NativeDevSettings';\nimport NativeLogBox from '../../NativeModules/specs/NativeLogBox';\nimport LogBoxLog from './LogBoxLog';\nimport {parseLogBoxException} from './parseLogBoxLog';\nimport * as React from 'react';\n\nexport type LogBoxLogs = Set<LogBoxLog>;\nexport type LogData = $ReadOnly<{\n  level: LogLevel,\n  message: Message,\n  category: Category,\n  componentStack: ComponentStack,\n  componentStackType: ComponentStackType | null,\n  stack?: string,\n}>;\n\nexport type Observer = (\n  $ReadOnly<{\n    logs: LogBoxLogs,\n    isDisabled: boolean,\n    selectedLogIndex: number,\n  }>,\n) => void;\n\nexport type IgnorePattern = string | RegExp;\n\nexport type Subscription = $ReadOnly<{\n  unsubscribe: () => void,\n}>;\n\nexport type WarningInfo = {\n  finalFormat: string,\n  forceDialogImmediately: boolean,\n  suppressDialog_LEGACY: boolean,\n  suppressCompletely: boolean,\n  monitorEvent: string | null,\n  monitorListVersion: number,\n  monitorSampleRate: number,\n};\n\nexport type WarningFilter = (format: string) => WarningInfo;\n\ntype AppInfo = $ReadOnly<{\n  appVersion: string,\n  engine: string,\n  onPress?: ?() => void,\n}>;\n\nconst observers: Set<{observer: Observer, ...}> = new Set();\nconst ignorePatterns: Set<IgnorePattern> = new Set();\nlet appInfo: ?() => AppInfo = null;\nlet logs: LogBoxLogs = new Set();\nlet updateTimeout: $FlowFixMe | null = null;\nlet _isDisabled = false;\nlet _selectedIndex = -1;\nlet hasShownFuseboxWarningsMigrationMessage = false;\nlet hostTargetSessionObserverSubscription = null;\n\nlet warningFilter: WarningFilter = function (format) {\n  return {\n    finalFormat: format,\n    forceDialogImmediately: false,\n    suppressDialog_LEGACY: false,\n    suppressCompletely: false,\n    monitorEvent: 'warning_unhandled',\n    monitorListVersion: 0,\n    monitorSampleRate: 1,\n  };\n};\n\nconst LOGBOX_ERROR_MESSAGE =\n  'An error was thrown when attempting to render log messages via LogBox.';\n\nfunction getNextState() {\n  return {\n    logs,\n    isDisabled: _isDisabled,\n    selectedLogIndex: _selectedIndex,\n  };\n}\n\nexport function reportLogBoxError(\n  error: ExtendedError,\n  componentStack?: string,\n): void {\n  const ExceptionsManager = require('../../Core/ExceptionsManager').default;\n\n  error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n  if (componentStack != null) {\n    error.componentStack = componentStack;\n  }\n  ExceptionsManager.handleException(error, /* isFatal */ true);\n}\n\nexport function isLogBoxErrorMessage(message: string): boolean {\n  return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n}\n\nexport function isMessageIgnored(message: string): boolean {\n  for (const pattern of ignorePatterns) {\n    if (\n      (pattern instanceof RegExp && pattern.test(message)) ||\n      (typeof pattern === 'string' && message.includes(pattern))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction handleUpdate(): void {\n  if (updateTimeout == null) {\n    updateTimeout = setImmediate(() => {\n      updateTimeout = null;\n      const nextState = getNextState();\n      observers.forEach(({observer}) => observer(nextState));\n    });\n  }\n}\n\nfunction appendNewLog(newLog: LogBoxLog) {\n  // Don't want store these logs because they trigger a\n  // state update when we add them to the store.\n  if (isMessageIgnored(newLog.message.content)) {\n    return;\n  }\n\n  // If the next log has the same category as the previous one\n  // then roll it up into the last log in the list by incrementing\n  // the count (similar to how Chrome does it).\n  const lastLog = Array.from(logs).pop();\n  if (lastLog && lastLog.category === newLog.category) {\n    lastLog.incrementCount();\n    handleUpdate();\n    return;\n  }\n\n  if (newLog.level === 'fatal') {\n    // If possible, to avoid jank, we don't want to open the error before\n    // it's symbolicated. To do that, we optimistically wait for\n    // symbolication for up to a second before adding the log.\n    const OPTIMISTIC_WAIT_TIME = 1000;\n\n    let addPendingLog: ?() => void = () => {\n      logs.add(newLog);\n      if (_selectedIndex < 0) {\n        setSelectedLog(logs.size - 1);\n      } else {\n        handleUpdate();\n      }\n      addPendingLog = null;\n    };\n\n    const optimisticTimeout = setTimeout(() => {\n      if (addPendingLog) {\n        addPendingLog();\n      }\n    }, OPTIMISTIC_WAIT_TIME);\n\n    newLog.symbolicate(status => {\n      if (addPendingLog && status !== 'PENDING') {\n        addPendingLog();\n        clearTimeout(optimisticTimeout);\n      } else if (status !== 'PENDING') {\n        // The log has already been added but we need to trigger a render.\n        handleUpdate();\n      }\n    });\n  } else if (newLog.level === 'syntax') {\n    logs.add(newLog);\n    setSelectedLog(logs.size - 1);\n  } else {\n    logs.add(newLog);\n    handleUpdate();\n  }\n}\n\nexport function addLog(log: LogData): void {\n  if (hostTargetSessionObserverSubscription == null) {\n    hostTargetSessionObserverSubscription = DebuggerSessionObserver.subscribe(\n      hasActiveSession => {\n        if (hasActiveSession) {\n          clearWarnings();\n        } else {\n          // Reset the flag so that we can show the message again if new warning was emitted\n          hasShownFuseboxWarningsMigrationMessage = false;\n        }\n      },\n    );\n  }\n\n  // If Host has Fusebox support\n  if (log.level === 'warn' && global.__FUSEBOX_HAS_FULL_CONSOLE_SUPPORT__) {\n    // And there is no active debugging session\n    if (!DebuggerSessionObserver.hasActiveSession()) {\n      showFuseboxWarningsMigrationMessageOnce();\n    }\n\n    // Don't show LogBox warnings when Host has active debugging session\n    return;\n  }\n\n  const errorForStackTrace = new Error();\n\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      const stack = parseErrorStack(log.stack ?? errorForStackTrace?.stack);\n\n      appendNewLog(\n        new LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack,\n          componentStackType: log.componentStackType || 'legacy',\n        }),\n      );\n    } catch (error) {\n      reportLogBoxError(error);\n    }\n  });\n}\n\nexport function addException(error: ExtendedExceptionData): void {\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      appendNewLog(new LogBoxLog(parseLogBoxException(error)));\n    } catch (loggingError) {\n      reportLogBoxError(loggingError);\n    }\n  });\n}\n\nexport function symbolicateLogNow(log: LogBoxLog) {\n  log.symbolicate(() => {\n    handleUpdate();\n  });\n}\n\nexport function retrySymbolicateLogNow(log: LogBoxLog) {\n  log.retrySymbolicate(() => {\n    handleUpdate();\n  });\n}\n\nexport function symbolicateLogLazy(log: LogBoxLog) {\n  log.symbolicate();\n}\n\nexport function clear(): void {\n  if (logs.size > 0) {\n    logs = new Set();\n    setSelectedLog(-1);\n  }\n}\n\nexport function setSelectedLog(proposedNewIndex: number): void {\n  const oldIndex = _selectedIndex;\n  let newIndex = proposedNewIndex;\n\n  const logArray = Array.from(logs);\n  let index = logArray.length - 1;\n  while (index >= 0) {\n    // The latest syntax error is selected and displayed before all other logs.\n    if (logArray[index].level === 'syntax') {\n      newIndex = index;\n      break;\n    }\n    index -= 1;\n  }\n  _selectedIndex = newIndex;\n  handleUpdate();\n  if (NativeLogBox) {\n    setTimeout(() => {\n      if (oldIndex < 0 && newIndex >= 0) {\n        NativeLogBox.show();\n      } else if (oldIndex >= 0 && newIndex < 0) {\n        NativeLogBox.hide();\n      }\n    }, 0);\n  }\n}\n\nexport function clearWarnings(): void {\n  const newLogs = Array.from(logs).filter(log => log.level !== 'warn');\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n    handleUpdate();\n  }\n}\n\nexport function clearErrors(): void {\n  const newLogs = Array.from(logs).filter(\n    log => log.level !== 'error' && log.level !== 'fatal',\n  );\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n  }\n}\n\nexport function dismiss(log: LogBoxLog): void {\n  if (logs.has(log)) {\n    logs.delete(log);\n    handleUpdate();\n  }\n}\n\nexport function setWarningFilter(filter: WarningFilter): void {\n  warningFilter = filter;\n}\n\nexport function setAppInfo(info: () => AppInfo): void {\n  appInfo = info;\n}\n\nexport function getAppInfo(): ?AppInfo {\n  return appInfo != null ? appInfo() : null;\n}\n\nexport function checkWarningFilter(format: string): WarningInfo {\n  return warningFilter(format);\n}\n\nexport function getIgnorePatterns(): $ReadOnlyArray<IgnorePattern> {\n  return Array.from(ignorePatterns);\n}\n\nexport function addIgnorePatterns(\n  patterns: $ReadOnlyArray<IgnorePattern>,\n): void {\n  const existingSize = ignorePatterns.size;\n  // The same pattern may be added multiple times, but adding a new pattern\n  // can be expensive so let's find only the ones that are new.\n  patterns.forEach((pattern: IgnorePattern) => {\n    if (pattern instanceof RegExp) {\n      for (const existingPattern of ignorePatterns) {\n        if (\n          existingPattern instanceof RegExp &&\n          existingPattern.toString() === pattern.toString()\n        ) {\n          return;\n        }\n      }\n      ignorePatterns.add(pattern);\n    }\n    ignorePatterns.add(pattern);\n  });\n  if (ignorePatterns.size === existingSize) {\n    return;\n  }\n  // We need to recheck all of the existing logs.\n  // This allows adding an ignore pattern anywhere in the codebase.\n  // Without this, if you ignore a pattern after the a log is created,\n  // then we would keep showing the log.\n  logs = new Set(\n    Array.from(logs).filter(log => !isMessageIgnored(log.message.content)),\n  );\n  handleUpdate();\n}\n\nexport function setDisabled(value: boolean): void {\n  if (value === _isDisabled) {\n    return;\n  }\n  _isDisabled = value;\n  handleUpdate();\n}\n\nexport function isDisabled(): boolean {\n  return _isDisabled;\n}\n\nexport function observe(observer: Observer): Subscription {\n  const subscription = {observer};\n  observers.add(subscription);\n\n  observer(getNextState());\n\n  return {\n    unsubscribe(): void {\n      observers.delete(subscription);\n    },\n  };\n}\n\ntype Props = $ReadOnly<{}>;\ntype State = $ReadOnly<{\n  logs: LogBoxLogs,\n  isDisabled: boolean,\n  hasError: boolean,\n  selectedLogIndex: number,\n}>;\n\ntype SubscribedComponent = React.ComponentType<\n  $ReadOnly<{\n    logs: $ReadOnlyArray<LogBoxLog>,\n    isDisabled: boolean,\n    selectedLogIndex: number,\n  }>,\n>;\n\nexport function withSubscription(\n  WrappedComponent: SubscribedComponent,\n): React.ComponentType<{}> {\n  class LogBoxStateSubscription extends React.Component<Props, State> {\n    static getDerivedStateFromError(): {hasError: boolean} {\n      return {hasError: true};\n    }\n\n    componentDidCatch(err: Error, errorInfo: {componentStack: string, ...}) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-call]\n      reportLogBoxError(err, errorInfo.componentStack);\n    }\n\n    _subscription: ?Subscription;\n\n    state: State = {\n      logs: new Set(),\n      isDisabled: false,\n      hasError: false,\n      selectedLogIndex: -1,\n    };\n\n    render(): React.Node {\n      if (this.state.hasError) {\n        // This happens when the component failed to render, in which case we delegate to the native redbox.\n        // We can't show anyback fallback UI here, because the error may be with <View> or <Text>.\n        return null;\n      }\n\n      return (\n        <WrappedComponent\n          logs={Array.from(this.state.logs)}\n          isDisabled={this.state.isDisabled}\n          selectedLogIndex={this.state.selectedLogIndex}\n        />\n      );\n    }\n\n    componentDidMount(): void {\n      this._subscription = observe(data => {\n        this.setState(data);\n      });\n    }\n\n    componentWillUnmount(): void {\n      if (this._subscription != null) {\n        this._subscription.unsubscribe();\n      }\n    }\n  }\n\n  return LogBoxStateSubscription;\n}\n\nfunction showFuseboxWarningsMigrationMessageOnce() {\n  if (hasShownFuseboxWarningsMigrationMessage) {\n    return;\n  }\n  hasShownFuseboxWarningsMigrationMessage = true;\n  appendNewLog(\n    new LogBoxLog({\n      level: 'warn',\n      message: {\n        content: 'Open debugger to view warnings.',\n        substitutions: [],\n      },\n      isComponentError: false,\n      stack: [],\n      category: 'fusebox-warnings-migration',\n      componentStack: [],\n      onNotificationPress: () => {\n        if (NativeDevSettings.openDebugger) {\n          NativeDevSettings.openDebugger();\n        }\n      },\n    }),\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,kBAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,aAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,UAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,eAAA,GAAAL,OAAA;AACA,IAAAM,KAAA,GAAAC,uBAAA,CAAAP,OAAA;AAA+B,IAAAQ,WAAA,GAAAR,OAAA;AAAA,IAAAS,YAAA;AAAA,SAAAF,wBAAAG,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAL,uBAAA,YAAAA,wBAAAG,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAAA,SAAAmB,WAAAnB,CAAA,EAAAK,CAAA,EAAAN,CAAA,WAAAM,CAAA,OAAAe,gBAAA,CAAAX,OAAA,EAAAJ,CAAA,OAAAgB,2BAAA,CAAAZ,OAAA,EAAAT,CAAA,EAAAsB,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAnB,CAAA,EAAAN,CAAA,YAAAqB,gBAAA,CAAAX,OAAA,EAAAT,CAAA,EAAAyB,WAAA,IAAApB,CAAA,CAAAqB,KAAA,CAAA1B,CAAA,EAAAD,CAAA;AAAA,SAAAuB,0BAAA,cAAAtB,CAAA,IAAA2B,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAd,IAAA,CAAAQ,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAA3B,CAAA,aAAAsB,yBAAA,YAAAA,0BAAA,aAAAtB,CAAA;AA4C/B,IAAM8B,SAAyC,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC3D,IAAMC,cAAkC,GAAG,IAAID,GAAG,CAAC,CAAC;AACpD,IAAIE,OAAuB,GAAG,IAAI;AAClC,IAAIC,IAAgB,GAAG,IAAIH,GAAG,CAAC,CAAC;AAChC,IAAII,aAAgC,GAAG,IAAI;AAC3C,IAAIC,WAAW,GAAG,KAAK;AACvB,IAAIC,cAAc,GAAG,CAAC,CAAC;AACvB,IAAIC,uCAAuC,GAAG,KAAK;AACnD,IAAIC,qCAAqC,GAAG,IAAI;AAEhD,IAAIC,aAA4B,GAAG,SAA/BA,aAA4BA,CAAaC,MAAM,EAAE;EACnD,OAAO;IACLC,WAAW,EAAED,MAAM;IACnBE,sBAAsB,EAAE,KAAK;IAC7BC,qBAAqB,EAAE,KAAK;IAC5BC,kBAAkB,EAAE,KAAK;IACzBC,YAAY,EAAE,mBAAmB;IACjCC,kBAAkB,EAAE,CAAC;IACrBC,iBAAiB,EAAE;EACrB,CAAC;AACH,CAAC;AAED,IAAMC,oBAAoB,GACxB,wEAAwE;AAE1E,SAASC,YAAYA,CAAA,EAAG;EACtB,OAAO;IACLhB,IAAI,EAAJA,IAAI;IACJiB,UAAU,EAAEf,WAAW;IACvBgB,gBAAgB,EAAEf;EACpB,CAAC;AACH;AAEO,SAASgB,iBAAiBA,CAC/BC,KAAoB,EACpBC,cAAuB,EACjB;EACN,IAAMC,iBAAiB,GAAGnE,OAAO,CAAC,8BAA8B,CAAC,CAACoB,OAAO;EAEzE6C,KAAK,CAACG,OAAO,GAAG,GAAGR,oBAAoB,OAAOK,KAAK,CAACG,OAAO,EAAE;EAC7D,IAAIF,cAAc,IAAI,IAAI,EAAE;IAC1BD,KAAK,CAACC,cAAc,GAAGA,cAAc;EACvC;EACAC,iBAAiB,CAACE,eAAe,CAACJ,KAAK,EAAgB,IAAI,CAAC;AAC9D;AAEO,SAASK,oBAAoBA,CAACF,OAAe,EAAW;EAC7D,OAAO,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACG,QAAQ,CAACX,oBAAoB,CAAC;AAC9E;AAEO,SAASY,gBAAgBA,CAACJ,OAAe,EAAW;EACzD,KAAK,IAAMK,OAAO,IAAI9B,cAAc,EAAE;IACpC,IACG8B,OAAO,YAAYC,MAAM,IAAID,OAAO,CAACE,IAAI,CAACP,OAAO,CAAC,IAClD,OAAOK,OAAO,KAAK,QAAQ,IAAIL,OAAO,CAACG,QAAQ,CAACE,OAAO,CAAE,EAC1D;MACA,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd;AAEA,SAASG,YAAYA,CAAA,EAAS;EAC5B,IAAI9B,aAAa,IAAI,IAAI,EAAE;IACzBA,aAAa,GAAG+B,YAAY,CAAC,YAAM;MACjC/B,aAAa,GAAG,IAAI;MACpB,IAAMgC,SAAS,GAAGjB,YAAY,CAAC,CAAC;MAChCpB,SAAS,CAACsC,OAAO,CAAC,UAAAC,IAAA;QAAA,IAAEC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;QAAA,OAAMA,QAAQ,CAACH,SAAS,CAAC;MAAA,EAAC;IACxD,CAAC,CAAC;EACJ;AACF;AAEA,SAASI,YAAYA,CAACC,MAAiB,EAAE;EAGvC,IAAIX,gBAAgB,CAACW,MAAM,CAACf,OAAO,CAACgB,OAAO,CAAC,EAAE;IAC5C;EACF;EAKA,IAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC1C,IAAI,CAAC,CAAC2C,GAAG,CAAC,CAAC;EACtC,IAAIH,OAAO,IAAIA,OAAO,CAACI,QAAQ,KAAKN,MAAM,CAACM,QAAQ,EAAE;IACnDJ,OAAO,CAACK,cAAc,CAAC,CAAC;IACxBd,YAAY,CAAC,CAAC;IACd;EACF;EAEA,IAAIO,MAAM,CAACQ,KAAK,KAAK,OAAO,EAAE;IAI5B,IAAMC,oBAAoB,GAAG,IAAI;IAEjC,IAAIC,cAA0B,GAAG,SAA7BA,aAA0BA,CAAA,EAAS;MACrChD,IAAI,CAACiD,GAAG,CAACX,MAAM,CAAC;MAChB,IAAInC,cAAc,GAAG,CAAC,EAAE;QACtB+C,cAAc,CAAClD,IAAI,CAACmD,IAAI,GAAG,CAAC,CAAC;MAC/B,CAAC,MAAM;QACLpB,YAAY,CAAC,CAAC;MAChB;MACAiB,cAAa,GAAG,IAAI;IACtB,CAAC;IAED,IAAMI,iBAAiB,GAAGC,UAAU,CAAC,YAAM;MACzC,IAAIL,cAAa,EAAE;QACjBA,cAAa,CAAC,CAAC;MACjB;IACF,CAAC,EAAED,oBAAoB,CAAC;IAExBT,MAAM,CAACgB,WAAW,CAAC,UAAAC,MAAM,EAAI;MAC3B,IAAIP,cAAa,IAAIO,MAAM,KAAK,SAAS,EAAE;QACzCP,cAAa,CAAC,CAAC;QACfQ,YAAY,CAACJ,iBAAiB,CAAC;MACjC,CAAC,MAAM,IAAIG,MAAM,KAAK,SAAS,EAAE;QAE/BxB,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIO,MAAM,CAACQ,KAAK,KAAK,QAAQ,EAAE;IACpC9C,IAAI,CAACiD,GAAG,CAACX,MAAM,CAAC;IAChBY,cAAc,CAAClD,IAAI,CAACmD,IAAI,GAAG,CAAC,CAAC;EAC/B,CAAC,MAAM;IACLnD,IAAI,CAACiD,GAAG,CAACX,MAAM,CAAC;IAChBP,YAAY,CAAC,CAAC;EAChB;AACF;AAEO,SAAS0B,MAAMA,CAACC,GAAY,EAAQ;EACzC,IAAIrD,qCAAqC,IAAI,IAAI,EAAE;IACjDA,qCAAqC,GAAGsD,+BAAuB,CAACC,SAAS,CACvE,UAAAC,gBAAgB,EAAI;MAClB,IAAIA,gBAAgB,EAAE;QACpBC,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QAEL1D,uCAAuC,GAAG,KAAK;MACjD;IACF,CACF,CAAC;EACH;EAGA,IAAIsD,GAAG,CAACZ,KAAK,KAAK,MAAM,IAAIiB,MAAM,CAACC,oCAAoC,EAAE;IAEvE,IAAI,CAACL,+BAAuB,CAACE,gBAAgB,CAAC,CAAC,EAAE;MAC/CI,uCAAuC,CAAC,CAAC;IAC3C;IAGA;EACF;EAEA,IAAMC,kBAAkB,GAAG,IAAIC,KAAK,CAAC,CAAC;EAItCnC,YAAY,CAAC,YAAM;IACjB,IAAI;MAAA,IAAAoC,UAAA;MACF,IAAMC,KAAK,GAAG,IAAAC,wBAAe,GAAAF,UAAA,GAACV,GAAG,CAACW,KAAK,YAAAD,UAAA,GAAIF,kBAAkB,oBAAlBA,kBAAkB,CAAEG,KAAK,CAAC;MAErEhC,YAAY,CACV,IAAIkC,kBAAS,CAAC;QACZzB,KAAK,EAAEY,GAAG,CAACZ,KAAK;QAChBvB,OAAO,EAAEmC,GAAG,CAACnC,OAAO;QACpBiD,gBAAgB,EAAE,KAAK;QACvBH,KAAK,EAALA,KAAK;QACLzB,QAAQ,EAAEc,GAAG,CAACd,QAAQ;QACtBvB,cAAc,EAAEqC,GAAG,CAACrC,cAAc;QAClCoD,kBAAkB,EAAEf,GAAG,CAACe,kBAAkB,IAAI;MAChD,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOrD,KAAK,EAAE;MACdD,iBAAiB,CAACC,KAAK,CAAC;IAC1B;EACF,CAAC,CAAC;AACJ;AAEO,SAASsD,YAAYA,CAACtD,KAA4B,EAAQ;EAG/DY,YAAY,CAAC,YAAM;IACjB,IAAI;MACFK,YAAY,CAAC,IAAIkC,kBAAS,CAAC,IAAAI,oCAAoB,EAACvD,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOwD,YAAY,EAAE;MACrBzD,iBAAiB,CAACyD,YAAY,CAAC;IACjC;EACF,CAAC,CAAC;AACJ;AAEO,SAASC,iBAAiBA,CAACnB,GAAc,EAAE;EAChDA,GAAG,CAACJ,WAAW,CAAC,YAAM;IACpBvB,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;AACJ;AAEO,SAAS+C,sBAAsBA,CAACpB,GAAc,EAAE;EACrDA,GAAG,CAACqB,gBAAgB,CAAC,YAAM;IACzBhD,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;AACJ;AAEO,SAASiD,kBAAkBA,CAACtB,GAAc,EAAE;EACjDA,GAAG,CAACJ,WAAW,CAAC,CAAC;AACnB;AAEO,SAAS2B,KAAKA,CAAA,EAAS;EAC5B,IAAIjF,IAAI,CAACmD,IAAI,GAAG,CAAC,EAAE;IACjBnD,IAAI,GAAG,IAAIH,GAAG,CAAC,CAAC;IAChBqD,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB;AACF;AAEO,SAASA,cAAcA,CAACgC,gBAAwB,EAAQ;EAC7D,IAAMC,QAAQ,GAAGhF,cAAc;EAC/B,IAAIiF,QAAQ,GAAGF,gBAAgB;EAE/B,IAAMG,QAAQ,GAAG5C,KAAK,CAACC,IAAI,CAAC1C,IAAI,CAAC;EACjC,IAAIsF,KAAK,GAAGD,QAAQ,CAACE,MAAM,GAAG,CAAC;EAC/B,OAAOD,KAAK,IAAI,CAAC,EAAE;IAEjB,IAAID,QAAQ,CAACC,KAAK,CAAC,CAACxC,KAAK,KAAK,QAAQ,EAAE;MACtCsC,QAAQ,GAAGE,KAAK;MAChB;IACF;IACAA,KAAK,IAAI,CAAC;EACZ;EACAnF,cAAc,GAAGiF,QAAQ;EACzBrD,YAAY,CAAC,CAAC;EACd,IAAIyD,qBAAY,EAAE;IAChBnC,UAAU,CAAC,YAAM;MACf,IAAI8B,QAAQ,GAAG,CAAC,IAAIC,QAAQ,IAAI,CAAC,EAAE;QACjCI,qBAAY,CAACC,IAAI,CAAC,CAAC;MACrB,CAAC,MAAM,IAAIN,QAAQ,IAAI,CAAC,IAAIC,QAAQ,GAAG,CAAC,EAAE;QACxCI,qBAAY,CAACE,IAAI,CAAC,CAAC;MACrB;IACF,CAAC,EAAE,CAAC,CAAC;EACP;AACF;AAEO,SAAS5B,aAAaA,CAAA,EAAS;EACpC,IAAM6B,OAAO,GAAGlD,KAAK,CAACC,IAAI,CAAC1C,IAAI,CAAC,CAAC4F,MAAM,CAAC,UAAAlC,GAAG;IAAA,OAAIA,GAAG,CAACZ,KAAK,KAAK,MAAM;EAAA,EAAC;EACpE,IAAI6C,OAAO,CAACJ,MAAM,KAAKvF,IAAI,CAACmD,IAAI,EAAE;IAChCnD,IAAI,GAAG,IAAIH,GAAG,CAAC8F,OAAO,CAAC;IACvBzC,cAAc,CAAC,CAAC,CAAC,CAAC;IAClBnB,YAAY,CAAC,CAAC;EAChB;AACF;AAEO,SAAS8D,WAAWA,CAAA,EAAS;EAClC,IAAMF,OAAO,GAAGlD,KAAK,CAACC,IAAI,CAAC1C,IAAI,CAAC,CAAC4F,MAAM,CACrC,UAAAlC,GAAG;IAAA,OAAIA,GAAG,CAACZ,KAAK,KAAK,OAAO,IAAIY,GAAG,CAACZ,KAAK,KAAK,OAAO;EAAA,CACvD,CAAC;EACD,IAAI6C,OAAO,CAACJ,MAAM,KAAKvF,IAAI,CAACmD,IAAI,EAAE;IAChCnD,IAAI,GAAG,IAAIH,GAAG,CAAC8F,OAAO,CAAC;IACvBzC,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB;AACF;AAEO,SAAS4C,OAAOA,CAACpC,GAAc,EAAQ;EAC5C,IAAI1D,IAAI,CAACxB,GAAG,CAACkF,GAAG,CAAC,EAAE;IACjB1D,IAAI,CAAC+F,MAAM,CAACrC,GAAG,CAAC;IAChB3B,YAAY,CAAC,CAAC;EAChB;AACF;AAEO,SAASiE,gBAAgBA,CAACJ,MAAqB,EAAQ;EAC5DtF,aAAa,GAAGsF,MAAM;AACxB;AAEO,SAASK,UAAUA,CAACC,IAAmB,EAAQ;EACpDnG,OAAO,GAAGmG,IAAI;AAChB;AAEO,SAASC,UAAUA,CAAA,EAAa;EACrC,OAAOpG,OAAO,IAAI,IAAI,GAAGA,OAAO,CAAC,CAAC,GAAG,IAAI;AAC3C;AAEO,SAASqG,kBAAkBA,CAAC7F,MAAc,EAAe;EAC9D,OAAOD,aAAa,CAACC,MAAM,CAAC;AAC9B;AAEO,SAAS8F,iBAAiBA,CAAA,EAAkC;EACjE,OAAO5D,KAAK,CAACC,IAAI,CAAC5C,cAAc,CAAC;AACnC;AAEO,SAASwG,iBAAiBA,CAC/BC,QAAuC,EACjC;EACN,IAAMC,YAAY,GAAG1G,cAAc,CAACqD,IAAI;EAGxCoD,QAAQ,CAACrE,OAAO,CAAC,UAACN,OAAsB,EAAK;IAC3C,IAAIA,OAAO,YAAYC,MAAM,EAAE;MAC7B,KAAK,IAAM4E,eAAe,IAAI3G,cAAc,EAAE;QAC5C,IACE2G,eAAe,YAAY5E,MAAM,IACjC4E,eAAe,CAACC,QAAQ,CAAC,CAAC,KAAK9E,OAAO,CAAC8E,QAAQ,CAAC,CAAC,EACjD;UACA;QACF;MACF;MACA5G,cAAc,CAACmD,GAAG,CAACrB,OAAO,CAAC;IAC7B;IACA9B,cAAc,CAACmD,GAAG,CAACrB,OAAO,CAAC;EAC7B,CAAC,CAAC;EACF,IAAI9B,cAAc,CAACqD,IAAI,KAAKqD,YAAY,EAAE;IACxC;EACF;EAKAxG,IAAI,GAAG,IAAIH,GAAG,CACZ4C,KAAK,CAACC,IAAI,CAAC1C,IAAI,CAAC,CAAC4F,MAAM,CAAC,UAAAlC,GAAG;IAAA,OAAI,CAAC/B,gBAAgB,CAAC+B,GAAG,CAACnC,OAAO,CAACgB,OAAO,CAAC;EAAA,EACvE,CAAC;EACDR,YAAY,CAAC,CAAC;AAChB;AAEO,SAAS4E,WAAWA,CAACC,KAAc,EAAQ;EAChD,IAAIA,KAAK,KAAK1G,WAAW,EAAE;IACzB;EACF;EACAA,WAAW,GAAG0G,KAAK;EACnB7E,YAAY,CAAC,CAAC;AAChB;AAEO,SAASd,UAAUA,CAAA,EAAY;EACpC,OAAOf,WAAW;AACpB;AAEO,SAAS2G,OAAOA,CAACzE,QAAkB,EAAgB;EACxD,IAAM0E,YAAY,GAAG;IAAC1E,QAAQ,EAARA;EAAQ,CAAC;EAC/BxC,SAAS,CAACqD,GAAG,CAAC6D,YAAY,CAAC;EAE3B1E,QAAQ,CAACpB,YAAY,CAAC,CAAC,CAAC;EAExB,OAAO;IACL+F,WAAW,WAAXA,WAAWA,CAAA,EAAS;MAClBnH,SAAS,CAACmG,MAAM,CAACe,YAAY,CAAC;IAChC;EACF,CAAC;AACH;AAkBO,SAASE,gBAAgBA,CAC9BC,gBAAqC,EACZ;EAAA,IACnBC,uBAAuB,aAAAC,gBAAA;IAAA,SAAAD,wBAAA;MAAA,IAAAE,KAAA;MAAA,IAAAC,gBAAA,CAAA9I,OAAA,QAAA2I,uBAAA;MAAA,SAAAI,IAAA,GAAAC,SAAA,CAAAhC,MAAA,EAAAiC,IAAA,OAAA/E,KAAA,CAAA6E,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;QAAAD,IAAA,CAAAC,IAAA,IAAAF,SAAA,CAAAE,IAAA;MAAA;MAAAL,KAAA,GAAAnI,UAAA,OAAAiI,uBAAA,KAAAQ,MAAA,CAAAF,IAAA;MAAAJ,KAAA,CAc3BO,KAAK,GAAU;QACb3H,IAAI,EAAE,IAAIH,GAAG,CAAC,CAAC;QACfoB,UAAU,EAAE,KAAK;QACjB2G,QAAQ,EAAE,KAAK;QACf1G,gBAAgB,EAAE,CAAC;MACrB,CAAC;MAAA,OAAAkG,KAAA;IAAA;IAAA,IAAAS,UAAA,CAAAtJ,OAAA,EAAA2I,uBAAA,EAAAC,gBAAA;IAAA,WAAAW,aAAA,CAAAvJ,OAAA,EAAA2I,uBAAA;MAAAa,GAAA;MAAAnB,KAAA,EAdD,SAAAoB,iBAAiBA,CAACC,GAAU,EAAEC,SAAwC,EAAE;QAItE/G,iBAAiB,CAAC8G,GAAG,EAAEC,SAAS,CAAC7G,cAAc,CAAC;MAClD;IAAC;MAAA0G,GAAA;MAAAnB,KAAA,EAWD,SAAAuB,MAAMA,CAAA,EAAe;QACnB,IAAI,IAAI,CAACR,KAAK,CAACC,QAAQ,EAAE;UAGvB,OAAO,IAAI;QACb;QAEA,OACE,IAAAjK,WAAA,CAAAyK,GAAA,EAACnB,gBAAgB;UACfjH,IAAI,EAAEyC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACiF,KAAK,CAAC3H,IAAI,CAAE;UAClCiB,UAAU,EAAE,IAAI,CAAC0G,KAAK,CAAC1G,UAAW;UAClCC,gBAAgB,EAAE,IAAI,CAACyG,KAAK,CAACzG;QAAiB,CAC/C,CAAC;MAEN;IAAC;MAAA6G,GAAA;MAAAnB,KAAA,EAED,SAAAyB,iBAAiBA,CAAA,EAAS;QAAA,IAAAC,MAAA;QACxB,IAAI,CAACC,aAAa,GAAG1B,OAAO,CAAC,UAAA2B,IAAI,EAAI;UACnCF,MAAI,CAACG,QAAQ,CAACD,IAAI,CAAC;QACrB,CAAC,CAAC;MACJ;IAAC;MAAAT,GAAA;MAAAnB,KAAA,EAED,SAAA8B,oBAAoBA,CAAA,EAAS;QAC3B,IAAI,IAAI,CAACH,aAAa,IAAI,IAAI,EAAE;UAC9B,IAAI,CAACA,aAAa,CAACxB,WAAW,CAAC,CAAC;QAClC;MACF;IAAC;MAAAgB,GAAA;MAAAnB,KAAA,EA9CD,SAAO+B,wBAAwBA,CAAA,EAAwB;QACrD,OAAO;UAACf,QAAQ,EAAE;QAAI,CAAC;MACzB;IAAC;EAAA,EAHmCnK,KAAK,CAACmL,SAAS;EAkDrD,OAAO1B,uBAAuB;AAChC;AAEA,SAASjD,uCAAuCA,CAAA,EAAG;EACjD,IAAI7D,uCAAuC,EAAE;IAC3C;EACF;EACAA,uCAAuC,GAAG,IAAI;EAC9CiC,YAAY,CACV,IAAIkC,kBAAS,CAAC;IACZzB,KAAK,EAAE,MAAM;IACbvB,OAAO,EAAE;MACPgB,OAAO,EAAE,iCAAiC;MAC1CsG,aAAa,EAAE;IACjB,CAAC;IACDrE,gBAAgB,EAAE,KAAK;IACvBH,KAAK,EAAE,EAAE;IACTzB,QAAQ,EAAE,4BAA4B;IACtCvB,cAAc,EAAE,EAAE;IAClByH,mBAAmB,EAAE,SAArBA,mBAAmBA,CAAA,EAAQ;MACzB,IAAIC,0BAAiB,CAACC,YAAY,EAAE;QAClCD,0BAAiB,CAACC,YAAY,CAAC,CAAC;MAClC;IACF;EACF,CAAC,CACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}