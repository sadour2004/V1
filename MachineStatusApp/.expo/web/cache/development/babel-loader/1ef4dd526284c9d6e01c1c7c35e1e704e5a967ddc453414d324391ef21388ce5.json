{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyValidationResult = stringifyValidationResult;\nexports.validate = validate;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar ReactNativeFeatureFlags = _interopRequireWildcard(require(\"../../src/private/featureflags/ReactNativeFeatureFlags\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction validate(name, nativeViewConfig, staticViewConfig) {\n  var differences = [];\n  accumulateDifferences(differences, [], {\n    bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n    directEventTypes: nativeViewConfig.directEventTypes,\n    uiViewClassName: nativeViewConfig.uiViewClassName,\n    validAttributes: nativeViewConfig.validAttributes\n  }, {\n    bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n    directEventTypes: staticViewConfig.directEventTypes,\n    uiViewClassName: staticViewConfig.uiViewClassName,\n    validAttributes: staticViewConfig.validAttributes\n  });\n  if (differences.length === 0) {\n    return {\n      type: 'valid'\n    };\n  }\n  return {\n    type: 'invalid',\n    differences: differences\n  };\n}\nfunction stringifyValidationResult(name, validationResult) {\n  var differences = validationResult.differences;\n  return [`StaticViewConfigValidator: Invalid static view config for '${name}'.`, ''].concat((0, _toConsumableArray2.default)(differences.map(function (difference) {\n    var type = difference.type,\n      path = difference.path;\n    switch (type) {\n      case 'missing':\n        return `- '${path.join('.')}' is missing.`;\n      case 'unequal':\n        return `- '${path.join('.')}' is the wrong value.`;\n    }\n  })), ['']).join('\\n');\n}\nfunction accumulateDifferences(differences, path, nativeObject, staticObject) {\n  for (var nativeKey in nativeObject) {\n    var nativeValue = nativeObject[nativeKey];\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [].concat((0, _toConsumableArray2.default)(path), [nativeKey]),\n        type: 'missing',\n        nativeValue: nativeValue\n      });\n      continue;\n    }\n    var staticValue = staticObject[nativeKey];\n    var nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      var staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(differences, path, nativeValueIfObject, staticValueIfObject);\n        path.pop();\n        continue;\n      }\n    }\n    if (nativeValue !== staticValue && !ReactNativeFeatureFlags.enableNativeCSSParsing()) {\n      differences.push({\n        path: [].concat((0, _toConsumableArray2.default)(path), [nativeKey]),\n        type: 'unequal',\n        nativeValue: nativeValue,\n        staticValue: staticValue\n      });\n    }\n  }\n}\nfunction ifObject(value) {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}","map":{"version":3,"names":["ReactNativeFeatureFlags","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","validate","name","nativeViewConfig","staticViewConfig","differences","accumulateDifferences","bubblingEventTypes","directEventTypes","uiViewClassName","validAttributes","length","type","stringifyValidationResult","validationResult","concat","_toConsumableArray2","map","difference","path","join","nativeObject","staticObject","nativeKey","nativeValue","push","staticValue","nativeValueIfObject","ifObject","staticValueIfObject","pop","enableNativeCSSParsing","value","Array","isArray"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/NativeComponent/StaticViewConfigValidator.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nexport type Difference =\n  | {\n      type: 'missing',\n      path: Array<string>,\n      nativeValue: mixed,\n    }\n  | {\n      type: 'unequal',\n      path: Array<string>,\n      nativeValue: mixed,\n      staticValue: mixed,\n    };\n\nexport type ValidationResult = ValidResult | InvalidResult;\ntype ValidResult = {\n  type: 'valid',\n};\ntype InvalidResult = {\n  type: 'invalid',\n  differences: Array<Difference>,\n};\n\n/**\n * During the migration from native view configs to static view configs, this is\n * used to validate that the two are equivalent.\n */\nexport function validate(\n  name: string,\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n): ValidationResult {\n  const differences: Array<Difference> = [];\n  accumulateDifferences(\n    differences,\n    [],\n    {\n      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n      directEventTypes: nativeViewConfig.directEventTypes,\n      uiViewClassName: nativeViewConfig.uiViewClassName,\n      validAttributes: nativeViewConfig.validAttributes,\n    },\n    {\n      bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n      directEventTypes: staticViewConfig.directEventTypes,\n      uiViewClassName: staticViewConfig.uiViewClassName,\n      validAttributes: staticViewConfig.validAttributes,\n    },\n  );\n\n  if (differences.length === 0) {\n    return {type: 'valid'};\n  }\n\n  return {\n    type: 'invalid',\n    differences,\n  };\n}\n\nexport function stringifyValidationResult(\n  name: string,\n  validationResult: InvalidResult,\n): string {\n  const {differences} = validationResult;\n  return [\n    `StaticViewConfigValidator: Invalid static view config for '${name}'.`,\n    '',\n    ...differences.map(difference => {\n      const {type, path} = difference;\n      switch (type) {\n        case 'missing':\n          return `- '${path.join('.')}' is missing.`;\n        case 'unequal':\n          return `- '${path.join('.')}' is the wrong value.`;\n      }\n    }),\n    '',\n  ].join('\\n');\n}\n\nfunction accumulateDifferences(\n  differences: Array<Difference>,\n  path: Array<string>,\n  nativeObject: {...},\n  staticObject: {...},\n): void {\n  for (const nativeKey in nativeObject) {\n    // $FlowFixMe[invalid-computed-prop]\n    const nativeValue = nativeObject[nativeKey];\n\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'missing',\n        nativeValue,\n      });\n      continue;\n    }\n\n    // $FlowFixMe[invalid-computed-prop]\n    const staticValue = staticObject[nativeKey];\n\n    const nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      const staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(\n          differences,\n          path,\n          nativeValueIfObject,\n          staticValueIfObject,\n        );\n        path.pop();\n        continue;\n      }\n    }\n\n    if (\n      nativeValue !== staticValue &&\n      !ReactNativeFeatureFlags.enableNativeCSSParsing()\n    ) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'unequal',\n        nativeValue,\n        staticValue,\n      });\n    }\n  }\n}\n\nfunction ifObject(value: mixed): ?{...} {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}