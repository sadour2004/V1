{"ast":null,"code":"'use strict';\n\nvar _require = require('../Utilities/PolyfillFunctions'),\n  polyfillGlobal = _require.polyfillGlobal;\npolyfillGlobal('XMLHttpRequest', function () {\n  return require('../Network/XMLHttpRequest').default;\n});\npolyfillGlobal('FormData', function () {\n  return require('../Network/FormData').default;\n});\npolyfillGlobal('fetch', function () {\n  return require('../Network/fetch').fetch;\n});\npolyfillGlobal('Headers', function () {\n  return require('../Network/fetch').Headers;\n});\npolyfillGlobal('Request', function () {\n  return require('../Network/fetch').Request;\n});\npolyfillGlobal('Response', function () {\n  return require('../Network/fetch').Response;\n});\npolyfillGlobal('WebSocket', function () {\n  return require('../WebSocket/WebSocket').default;\n});\npolyfillGlobal('Blob', function () {\n  return require('../Blob/Blob').default;\n});\npolyfillGlobal('File', function () {\n  return require('../Blob/File').default;\n});\npolyfillGlobal('FileReader', function () {\n  return require('../Blob/FileReader').default;\n});\npolyfillGlobal('URL', function () {\n  return require('../Blob/URL').URL;\n});\npolyfillGlobal('URLSearchParams', function () {\n  return require('../Blob/URL').URLSearchParams;\n});\npolyfillGlobal('AbortController', function () {\n  return require('abort-controller/dist/abort-controller').AbortController;\n});\npolyfillGlobal('AbortSignal', function () {\n  return require('abort-controller/dist/abort-controller').AbortSignal;\n});","map":{"version":3,"names":["_require","require","polyfillGlobal","default","fetch","Headers","Request","Response","URL","URLSearchParams","AbortController","AbortSignal"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/Core/setUpXHR.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst {polyfillGlobal} = require('../Utilities/PolyfillFunctions');\n\n/**\n * Set up XMLHttpRequest. The native XMLHttpRequest in Chrome dev tools is CORS\n * aware and won't let you fetch anything from the internet.\n *\n * You can use this module directly, or just require InitializeCore.\n */\npolyfillGlobal(\n  'XMLHttpRequest',\n  () => require('../Network/XMLHttpRequest').default,\n);\npolyfillGlobal('FormData', () => require('../Network/FormData').default);\n\npolyfillGlobal('fetch', () => require('../Network/fetch').fetch);\npolyfillGlobal('Headers', () => require('../Network/fetch').Headers);\npolyfillGlobal('Request', () => require('../Network/fetch').Request);\npolyfillGlobal('Response', () => require('../Network/fetch').Response);\npolyfillGlobal('WebSocket', () => require('../WebSocket/WebSocket').default);\npolyfillGlobal('Blob', () => require('../Blob/Blob').default);\npolyfillGlobal('File', () => require('../Blob/File').default);\npolyfillGlobal('FileReader', () => require('../Blob/FileReader').default);\npolyfillGlobal('URL', () => require('../Blob/URL').URL);\npolyfillGlobal('URLSearchParams', () => require('../Blob/URL').URLSearchParams);\npolyfillGlobal(\n  'AbortController',\n  () => require('abort-controller/dist/abort-controller').AbortController, // flowlint-line untyped-import:off\n);\npolyfillGlobal(\n  'AbortSignal',\n  () => require('abort-controller/dist/abort-controller').AbortSignal, // flowlint-line untyped-import:off\n);\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAAA,QAAA,GAAyBC,OAAO,CAAC,gCAAgC,CAAC;EAA3DC,cAAc,GAAAF,QAAA,CAAdE,cAAc;AAQrBA,cAAc,CACZ,gBAAgB,EAChB;EAAA,OAAMD,OAAO,CAAC,2BAA2B,CAAC,CAACE,OAAO;AAAA,CACpD,CAAC;AACDD,cAAc,CAAC,UAAU,EAAE;EAAA,OAAMD,OAAO,CAAC,qBAAqB,CAAC,CAACE,OAAO;AAAA,EAAC;AAExED,cAAc,CAAC,OAAO,EAAE;EAAA,OAAMD,OAAO,CAAC,kBAAkB,CAAC,CAACG,KAAK;AAAA,EAAC;AAChEF,cAAc,CAAC,SAAS,EAAE;EAAA,OAAMD,OAAO,CAAC,kBAAkB,CAAC,CAACI,OAAO;AAAA,EAAC;AACpEH,cAAc,CAAC,SAAS,EAAE;EAAA,OAAMD,OAAO,CAAC,kBAAkB,CAAC,CAACK,OAAO;AAAA,EAAC;AACpEJ,cAAc,CAAC,UAAU,EAAE;EAAA,OAAMD,OAAO,CAAC,kBAAkB,CAAC,CAACM,QAAQ;AAAA,EAAC;AACtEL,cAAc,CAAC,WAAW,EAAE;EAAA,OAAMD,OAAO,CAAC,wBAAwB,CAAC,CAACE,OAAO;AAAA,EAAC;AAC5ED,cAAc,CAAC,MAAM,EAAE;EAAA,OAAMD,OAAO,CAAC,cAAc,CAAC,CAACE,OAAO;AAAA,EAAC;AAC7DD,cAAc,CAAC,MAAM,EAAE;EAAA,OAAMD,OAAO,CAAC,cAAc,CAAC,CAACE,OAAO;AAAA,EAAC;AAC7DD,cAAc,CAAC,YAAY,EAAE;EAAA,OAAMD,OAAO,CAAC,oBAAoB,CAAC,CAACE,OAAO;AAAA,EAAC;AACzED,cAAc,CAAC,KAAK,EAAE;EAAA,OAAMD,OAAO,CAAC,aAAa,CAAC,CAACO,GAAG;AAAA,EAAC;AACvDN,cAAc,CAAC,iBAAiB,EAAE;EAAA,OAAMD,OAAO,CAAC,aAAa,CAAC,CAACQ,eAAe;AAAA,EAAC;AAC/EP,cAAc,CACZ,iBAAiB,EACjB;EAAA,OAAMD,OAAO,CAAC,wCAAwC,CAAC,CAACS,eAAe;AAAA,CACzE,CAAC;AACDR,cAAc,CACZ,aAAa,EACb;EAAA,OAAMD,OAAO,CAAC,wCAAwC,CAAC,CAACU,WAAW;AAAA,CACrE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}