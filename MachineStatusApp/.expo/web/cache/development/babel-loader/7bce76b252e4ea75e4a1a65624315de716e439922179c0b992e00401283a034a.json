{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction defineLazyObjectProperty(object, name, descriptor) {\n  var get = descriptor.get;\n  var enumerable = descriptor.enumerable !== false;\n  var writable = descriptor.writable !== false;\n  var value;\n  var valueSet = false;\n  function getValue() {\n    if (!valueSet) {\n      valueSet = true;\n      setValue(get());\n    }\n    return value;\n  }\n  function setValue(newValue) {\n    value = newValue;\n    valueSet = true;\n    Object.defineProperty(object, name, {\n      value: newValue,\n      configurable: true,\n      enumerable: enumerable,\n      writable: writable\n    });\n  }\n  Object.defineProperty(object, name, {\n    get: getValue,\n    set: setValue,\n    configurable: true,\n    enumerable: enumerable\n  });\n}\nvar _default = exports.default = defineLazyObjectProperty;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","defineLazyObjectProperty","object","name","descriptor","get","enumerable","writable","valueSet","getValue","setValue","newValue","configurable","set","_default"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/Utilities/defineLazyObjectProperty.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Defines a lazily evaluated property on the supplied `object`.\n */\nfunction defineLazyObjectProperty<T>(\n  object: interface {},\n  name: string,\n  descriptor: {\n    get: () => T,\n    enumerable?: boolean,\n    writable?: boolean,\n    ...\n  },\n): void {\n  const {get} = descriptor;\n  const enumerable = descriptor.enumerable !== false;\n  const writable = descriptor.writable !== false;\n\n  let value;\n  let valueSet = false;\n  function getValue(): T {\n    // WORKAROUND: A weird infinite loop occurs where calling `getValue` calls\n    // `setValue` which calls `Object.defineProperty` which somehow triggers\n    // `getValue` again. Adding `valueSet` breaks this loop.\n    if (!valueSet) {\n      // Calling `get()` here can trigger an infinite loop if it fails to\n      // remove the getter on the property, which can happen when executing\n      // JS in a V8 context.  `valueSet = true` will break this loop, and\n      // sets the value of the property to undefined, until the code in `get()`\n      // finishes, at which point the property is set to the correct value.\n      valueSet = true;\n      setValue(get());\n    }\n    return value;\n  }\n  function setValue(newValue: T): void {\n    value = newValue;\n    valueSet = true;\n    Object.defineProperty(object, name, {\n      value: newValue,\n      configurable: true,\n      enumerable,\n      writable,\n    });\n  }\n\n  Object.defineProperty(object, name, {\n    get: getValue,\n    set: setValue,\n    configurable: true,\n    enumerable,\n  });\n}\n\nexport default defineLazyObjectProperty;\n"],"mappings":"AAUA,YAAY;;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,OAAA;AAKb,SAASC,wBAAwBA,CAC/BC,MAAoB,EACpBC,IAAY,EACZC,UAKC,EACK;EACN,IAAOC,GAAG,GAAID,UAAU,CAAjBC,GAAG;EACV,IAAMC,UAAU,GAAGF,UAAU,CAACE,UAAU,KAAK,KAAK;EAClD,IAAMC,QAAQ,GAAGH,UAAU,CAACG,QAAQ,KAAK,KAAK;EAE9C,IAAIR,KAAK;EACT,IAAIS,QAAQ,GAAG,KAAK;EACpB,SAASC,QAAQA,CAAA,EAAM;IAIrB,IAAI,CAACD,QAAQ,EAAE;MAMbA,QAAQ,GAAG,IAAI;MACfE,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC;IACjB;IACA,OAAON,KAAK;EACd;EACA,SAASW,QAAQA,CAACC,QAAW,EAAQ;IACnCZ,KAAK,GAAGY,QAAQ;IAChBH,QAAQ,GAAG,IAAI;IACfZ,MAAM,CAACC,cAAc,CAACK,MAAM,EAAEC,IAAI,EAAE;MAClCJ,KAAK,EAAEY,QAAQ;MACfC,YAAY,EAAE,IAAI;MAClBN,UAAU,EAAVA,UAAU;MACVC,QAAQ,EAARA;IACF,CAAC,CAAC;EACJ;EAEAX,MAAM,CAACC,cAAc,CAACK,MAAM,EAAEC,IAAI,EAAE;IAClCE,GAAG,EAAEI,QAAQ;IACbI,GAAG,EAAEH,QAAQ;IACbE,YAAY,EAAE,IAAI;IAClBN,UAAU,EAAVA;EACF,CAAC,CAAC;AACJ;AAAC,IAAAQ,QAAA,GAAAhB,OAAA,CAAAE,OAAA,GAEcC,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}