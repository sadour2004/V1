{"ast":null,"code":"'use client';\n'use strict';\n\nvar start = Date.now();\nrequire('./setUpGlobals');\nrequire('../../src/private/setup/setUpDOM').default();\nrequire('./setUpPerformance');\nrequire('./polyfillPromise');\nrequire('./setUpTimers');\nif (__DEV__) {\n  require('./setUpReactDevTools');\n}\nrequire('./setUpErrorHandling');\nrequire('./setUpRegeneratorRuntime');\nrequire('./setUpXHR');\nrequire('./setUpAlert');\nrequire('./setUpNavigator');\nrequire('./setUpBatchedBridge');\nrequire('./setUpSegmentFetcher');\nif (__DEV__) {\n  require('./checkNativeVersion');\n  require('./setUpDeveloperTools');\n  require('../LogBox/LogBox').default.install();\n}\nrequire('../ReactNative/AppRegistry');\nvar GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger').default;\nGlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));\nGlobalPerformanceLogger.markPoint('initializeCore_end');","map":{"version":3,"names":["start","Date","now","require","default","__DEV__","install","GlobalPerformanceLogger","markPoint","currentTimestamp"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/Core/InitializeCore.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use client';\n\n/**\n * Sets up global variables typical in most JavaScript environments.\n *\n *   1. Global timers (via `setTimeout` etc).\n *   2. Global console object.\n *   3. Hooks for printing stack traces with source maps.\n *\n * Leaves enough room in the environment for implementing your own:\n *\n *   1. Require system.\n *   2. Bridged modules.\n *\n */\n\n'use strict';\n\nconst start = Date.now();\n\nrequire('./setUpGlobals');\nrequire('../../src/private/setup/setUpDOM').default();\nrequire('./setUpPerformance');\nrequire('./polyfillPromise');\nrequire('./setUpTimers');\nif (__DEV__) {\n  require('./setUpReactDevTools');\n}\nrequire('./setUpErrorHandling');\nrequire('./setUpRegeneratorRuntime');\nrequire('./setUpXHR');\nrequire('./setUpAlert');\nrequire('./setUpNavigator');\nrequire('./setUpBatchedBridge');\nrequire('./setUpSegmentFetcher');\nif (__DEV__) {\n  require('./checkNativeVersion');\n  require('./setUpDeveloperTools');\n  require('../LogBox/LogBox').default.install();\n}\n\nrequire('../ReactNative/AppRegistry');\n\nconst GlobalPerformanceLogger =\n  require('../Utilities/GlobalPerformanceLogger').default;\n// We could just call GlobalPerformanceLogger.markPoint at the top of the file,\n// but then we'd be excluding the time it took to require the logger.\n// Instead, we just use Date.now and backdate the timestamp.\nGlobalPerformanceLogger.markPoint(\n  'initializeCore_start',\n  GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start),\n);\nGlobalPerformanceLogger.markPoint('initializeCore_end');\n"],"mappings":"AAUA,YAAY;AAgBZ,YAAY;;AAEZ,IAAMA,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;AAExBC,OAAO,CAAC,gBAAgB,CAAC;AACzBA,OAAO,CAAC,kCAAkC,CAAC,CAACC,OAAO,CAAC,CAAC;AACrDD,OAAO,CAAC,oBAAoB,CAAC;AAC7BA,OAAO,CAAC,mBAAmB,CAAC;AAC5BA,OAAO,CAAC,eAAe,CAAC;AACxB,IAAIE,OAAO,EAAE;EACXF,OAAO,CAAC,sBAAsB,CAAC;AACjC;AACAA,OAAO,CAAC,sBAAsB,CAAC;AAC/BA,OAAO,CAAC,2BAA2B,CAAC;AACpCA,OAAO,CAAC,YAAY,CAAC;AACrBA,OAAO,CAAC,cAAc,CAAC;AACvBA,OAAO,CAAC,kBAAkB,CAAC;AAC3BA,OAAO,CAAC,sBAAsB,CAAC;AAC/BA,OAAO,CAAC,uBAAuB,CAAC;AAChC,IAAIE,OAAO,EAAE;EACXF,OAAO,CAAC,sBAAsB,CAAC;EAC/BA,OAAO,CAAC,uBAAuB,CAAC;EAChCA,OAAO,CAAC,kBAAkB,CAAC,CAACC,OAAO,CAACE,OAAO,CAAC,CAAC;AAC/C;AAEAH,OAAO,CAAC,4BAA4B,CAAC;AAErC,IAAMI,uBAAuB,GAC3BJ,OAAO,CAAC,sCAAsC,CAAC,CAACC,OAAO;AAIzDG,uBAAuB,CAACC,SAAS,CAC/B,sBAAsB,EACtBD,uBAAuB,CAACE,gBAAgB,CAAC,CAAC,IAAIR,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,KAAK,CAClE,CAAC;AACDO,uBAAuB,CAACC,SAAS,CAAC,oBAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}