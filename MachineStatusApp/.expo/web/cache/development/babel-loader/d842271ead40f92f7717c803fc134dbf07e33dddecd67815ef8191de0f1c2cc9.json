{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getElementSibling = getElementSibling;\nvar _ReadOnlyNode = require(\"../ReadOnlyNode\");\nvar ReadOnlyElementClass;\nfunction getElementSibling(node, direction) {\n  var _childNodes$position;\n  var parent = node.parentNode;\n  if (parent == null) {\n    return null;\n  }\n  var childNodes = (0, _ReadOnlyNode.getChildNodes)(parent);\n  var startPosition = childNodes.indexOf(node);\n  if (startPosition === -1) {\n    return null;\n  }\n  var increment = direction === 'next' ? 1 : -1;\n  var position = startPosition + increment;\n  if (ReadOnlyElementClass == null) {\n    ReadOnlyElementClass = require('../ReadOnlyElement').default;\n  }\n  while (childNodes[position] != null && !(childNodes[position] instanceof ReadOnlyElementClass)) {\n    position = position + increment;\n  }\n  return (_childNodes$position = childNodes[position]) != null ? _childNodes$position : null;\n}","map":{"version":3,"names":["_ReadOnlyNode","require","ReadOnlyElementClass","getElementSibling","node","direction","_childNodes$position","parent","parentNode","childNodes","getChildNodes","startPosition","indexOf","increment","position","default"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/src/private/webapis/dom/nodes/internals/Traversal.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type ReadOnlyElement from '../ReadOnlyElement';\nimport type ReadOnlyNode from '../ReadOnlyNode';\n\nimport {getChildNodes} from '../ReadOnlyNode';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `Traversal`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport function getElementSibling(\n  node: ReadOnlyNode,\n  direction: 'next' | 'previous',\n): ReadOnlyElement | null {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return null;\n  }\n\n  const childNodes = getChildNodes(parent);\n\n  const startPosition = childNodes.indexOf(node);\n  if (startPosition === -1) {\n    return null;\n  }\n\n  const increment = direction === 'next' ? 1 : -1;\n\n  let position = startPosition + increment;\n\n  if (ReadOnlyElementClass == null) {\n    // We initialize this lazily to avoid a require cycle.\n    ReadOnlyElementClass = require('../ReadOnlyElement').default;\n  }\n\n  while (\n    childNodes[position] != null &&\n    !(childNodes[position] instanceof ReadOnlyElementClass)\n  ) {\n    position = position + increment;\n  }\n\n  return childNodes[position] ?? null;\n}\n"],"mappings":";;;;AAaA,IAAAA,aAAA,GAAAC,OAAA;AAIA,IAAIC,oBAA4C;AAEzC,SAASC,iBAAiBA,CAC/BC,IAAkB,EAClBC,SAA8B,EACN;EAAA,IAAAC,oBAAA;EACxB,IAAMC,MAAM,GAAGH,IAAI,CAACI,UAAU;EAC9B,IAAID,MAAM,IAAI,IAAI,EAAE;IAElB,OAAO,IAAI;EACb;EAEA,IAAME,UAAU,GAAG,IAAAC,2BAAa,EAACH,MAAM,CAAC;EAExC,IAAMI,aAAa,GAAGF,UAAU,CAACG,OAAO,CAACR,IAAI,CAAC;EAC9C,IAAIO,aAAa,KAAK,CAAC,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EAEA,IAAME,SAAS,GAAGR,SAAS,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EAE/C,IAAIS,QAAQ,GAAGH,aAAa,GAAGE,SAAS;EAExC,IAAIX,oBAAoB,IAAI,IAAI,EAAE;IAEhCA,oBAAoB,GAAGD,OAAO,CAAC,oBAAoB,CAAC,CAACc,OAAO;EAC9D;EAEA,OACEN,UAAU,CAACK,QAAQ,CAAC,IAAI,IAAI,IAC5B,EAAEL,UAAU,CAACK,QAAQ,CAAC,YAAYZ,oBAAoB,CAAC,EACvD;IACAY,QAAQ,GAAGA,QAAQ,GAAGD,SAAS;EACjC;EAEA,QAAAP,oBAAA,GAAOG,UAAU,CAACK,QAAQ,CAAC,YAAAR,oBAAA,GAAI,IAAI;AACrC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}