{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.polyfillGlobal = polyfillGlobal;\nexports.polyfillObjectProperty = polyfillObjectProperty;\nvar defineLazyObjectProperty = require('./defineLazyObjectProperty').default;\nfunction polyfillObjectProperty(object, name, getValue) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, name);\n  if (__DEV__ && descriptor) {\n    var backupName = `original${name[0].toUpperCase()}${name.slice(1)}`;\n    Object.defineProperty(object, backupName, descriptor);\n  }\n  var _ref = descriptor || {},\n    enumerable = _ref.enumerable,\n    writable = _ref.writable,\n    _ref$configurable = _ref.configurable,\n    configurable = _ref$configurable === void 0 ? false : _ref$configurable;\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false\n  });\n}\nfunction polyfillGlobal(name, getValue) {\n  polyfillObjectProperty(global, name, getValue);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","polyfillGlobal","polyfillObjectProperty","defineLazyObjectProperty","require","default","object","name","getValue","descriptor","getOwnPropertyDescriptor","__DEV__","backupName","toUpperCase","slice","_ref","enumerable","writable","_ref$configurable","configurable","console","error","get","global"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/Utilities/PolyfillFunctions.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst defineLazyObjectProperty = require('./defineLazyObjectProperty').default;\n\n/**\n * Sets an object's property. If a property with the same name exists, this will\n * replace it but maintain its descriptor configuration. The property will be\n * replaced with a lazy getter.\n *\n * In DEV mode the original property value will be preserved as `original[PropertyName]`\n * so that, if necessary, it can be restored. For example, if you want to route\n * network requests through DevTools (to trace them):\n *\n *   global.XMLHttpRequest = global.originalXMLHttpRequest;\n *\n * @see https://github.com/facebook/react-native/issues/934\n */\nexport function polyfillObjectProperty<T>(\n  object: {...},\n  name: string,\n  getValue: () => T,\n): void {\n  const descriptor = Object.getOwnPropertyDescriptor<$FlowFixMe>(object, name);\n  if (__DEV__ && descriptor) {\n    const backupName = `original${name[0].toUpperCase()}${name.slice(1)}`;\n    Object.defineProperty(object, backupName, descriptor);\n  }\n\n  const {enumerable, writable, configurable = false} = descriptor || {};\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false,\n  });\n}\n\nexport function polyfillGlobal<T>(name: string, getValue: () => T): void {\n  polyfillObjectProperty(global, name, getValue);\n}\n"],"mappings":"AAUA,YAAY;;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,cAAA,GAAAA,cAAA;AAAAF,OAAA,CAAAG,sBAAA,GAAAA,sBAAA;AAEb,IAAMC,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC,CAACC,OAAO;AAevE,SAASH,sBAAsBA,CACpCI,MAAa,EACbC,IAAY,EACZC,QAAiB,EACX;EACN,IAAMC,UAAU,GAAGZ,MAAM,CAACa,wBAAwB,CAAaJ,MAAM,EAAEC,IAAI,CAAC;EAC5E,IAAII,OAAO,IAAIF,UAAU,EAAE;IACzB,IAAMG,UAAU,GAAG,WAAWL,IAAI,CAAC,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC,GAAGN,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,EAAE;IACrEjB,MAAM,CAACC,cAAc,CAACQ,MAAM,EAAEM,UAAU,EAAEH,UAAU,CAAC;EACvD;EAEA,IAAAM,IAAA,GAAqDN,UAAU,IAAI,CAAC,CAAC;IAA9DO,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAAC,iBAAA,GAAAH,IAAA,CAAEI,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,KAAK,GAAAA,iBAAA;EACjD,IAAIT,UAAU,IAAI,CAACU,YAAY,EAAE;IAC/BC,OAAO,CAACC,KAAK,CAAC,0BAA0B,GAAGd,IAAI,GAAG,uBAAuB,CAAC;IAC1E;EACF;EAEAJ,wBAAwB,CAACG,MAAM,EAAEC,IAAI,EAAE;IACrCe,GAAG,EAAEd,QAAQ;IACbQ,UAAU,EAAEA,UAAU,KAAK,KAAK;IAChCC,QAAQ,EAAEA,QAAQ,KAAK;EACzB,CAAC,CAAC;AACJ;AAEO,SAAShB,cAAcA,CAAIM,IAAY,EAAEC,QAAiB,EAAQ;EACvEN,sBAAsB,CAACqB,MAAM,EAAEhB,IAAI,EAAEC,QAAQ,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}