{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _LogBox = _interopRequireDefault(require(\"./LogBox/LogBox\"));\nvar rejectionTrackingOptions = {\n  allRejections: true,\n  onUnhandled: function onUnhandled(id) {\n    var rejection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var message;\n    var stack;\n    var stringValue = Object.prototype.toString.call(rejection);\n    if (stringValue === '[object Error]') {\n      message = Error.prototype.toString.call(rejection);\n      var error = rejection;\n      stack = error.stack;\n    } else {\n      try {\n        message = require('pretty-format').format(rejection);\n      } catch (_unused) {\n        message = typeof rejection === 'string' ? rejection : JSON.stringify(rejection);\n      }\n      if (rejection != null && rejection.stack && typeof rejection.stack === 'string') {\n        stack = rejection.stack;\n      }\n    }\n    var warning = `Possible unhandled promise rejection (id: ${id}):\\n${message != null ? message : ''}`;\n    if (__DEV__) {\n      _LogBox.default.addLog({\n        level: 'warn',\n        message: {\n          content: warning,\n          substitutions: []\n        },\n        componentStack: [],\n        componentStackType: null,\n        stack: stack,\n        category: 'possible_unhandled_promise_rejection'\n      });\n    } else {\n      console.warn(warning);\n    }\n  },\n  onHandled: function onHandled(id) {\n    var warning = `Promise rejection handled (id: ${id})\\n` + 'This means you can ignore any previous messages of the form ' + `\"Possible unhandled promise rejection (id: ${id}):\"`;\n    console.warn(warning);\n  }\n};\nvar _default = exports.default = rejectionTrackingOptions;","map":{"version":3,"names":["_LogBox","_interopRequireDefault","require","rejectionTrackingOptions","allRejections","onUnhandled","id","rejection","arguments","length","undefined","message","stack","stringValue","Object","prototype","toString","call","Error","error","format","_unused","JSON","stringify","warning","__DEV__","LogBox","addLog","level","content","substitutions","componentStack","componentStackType","category","console","warn","onHandled","_default","exports","default"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/promiseRejectionTrackingOptions.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport typeof {enable} from 'promise/setimmediate/rejection-tracking';\n\nimport LogBox from './LogBox/LogBox';\n\nlet rejectionTrackingOptions: $NonMaybeType<Parameters<enable>[0]> = {\n  allRejections: true,\n  onUnhandled: (id, rejection = {}) => {\n    let message: string;\n    let stack: ?string;\n\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    const stringValue = Object.prototype.toString.call(rejection);\n    if (stringValue === '[object Error]') {\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      message = Error.prototype.toString.call(rejection);\n      const error: Error = (rejection: $FlowFixMe);\n      stack = error.stack;\n    } else {\n      try {\n        message = require('pretty-format').format(rejection);\n      } catch {\n        message =\n          typeof rejection === 'string'\n            ? rejection\n            : JSON.stringify((rejection: $FlowFixMe));\n      }\n      // It could although this object is not a standard error, it still has stack information to unwind\n      // $FlowFixMe ignore types just check if stack is there\n      if (rejection?.stack && typeof rejection.stack === 'string') {\n        stack = rejection.stack;\n      }\n    }\n\n    const warning = `Possible unhandled promise rejection (id: ${id}):\\n${\n      message ?? ''\n    }`;\n    if (__DEV__) {\n      LogBox.addLog({\n        level: 'warn',\n        message: {\n          content: warning,\n          substitutions: [],\n        },\n        componentStack: [],\n        componentStackType: null,\n        stack,\n        category: 'possible_unhandled_promise_rejection',\n      });\n    } else {\n      console.warn(warning);\n    }\n  },\n  onHandled: id => {\n    const warning =\n      `Promise rejection handled (id: ${id})\\n` +\n      'This means you can ignore any previous messages of the form ' +\n      `\"Possible unhandled promise rejection (id: ${id}):\"`;\n    console.warn(warning);\n  },\n};\n\nexport default rejectionTrackingOptions;\n"],"mappings":";;;;;AAYA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAIC,wBAA8D,GAAG;EACnEC,aAAa,EAAE,IAAI;EACnBC,WAAW,EAAE,SAAbA,WAAWA,CAAGC,EAAE,EAAqB;IAAA,IAAnBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC9B,IAAIG,OAAe;IACnB,IAAIC,KAAc;IAGlB,IAAMC,WAAW,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACV,SAAS,CAAC;IAC7D,IAAIM,WAAW,KAAK,gBAAgB,EAAE;MAEpCF,OAAO,GAAGO,KAAK,CAACH,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACV,SAAS,CAAC;MAClD,IAAMY,KAAY,GAAIZ,SAAsB;MAC5CK,KAAK,GAAGO,KAAK,CAACP,KAAK;IACrB,CAAC,MAAM;MACL,IAAI;QACFD,OAAO,GAAGT,OAAO,CAAC,eAAe,CAAC,CAACkB,MAAM,CAACb,SAAS,CAAC;MACtD,CAAC,CAAC,OAAAc,OAAA,EAAM;QACNV,OAAO,GACL,OAAOJ,SAAS,KAAK,QAAQ,GACzBA,SAAS,GACTe,IAAI,CAACC,SAAS,CAAEhB,SAAsB,CAAC;MAC/C;MAGA,IAAIA,SAAS,YAATA,SAAS,CAAEK,KAAK,IAAI,OAAOL,SAAS,CAACK,KAAK,KAAK,QAAQ,EAAE;QAC3DA,KAAK,GAAGL,SAAS,CAACK,KAAK;MACzB;IACF;IAEA,IAAMY,OAAO,GAAG,6CAA6ClB,EAAE,OAC7DK,OAAO,WAAPA,OAAO,GAAI,EAAE,EACb;IACF,IAAIc,OAAO,EAAE;MACXC,eAAM,CAACC,MAAM,CAAC;QACZC,KAAK,EAAE,MAAM;QACbjB,OAAO,EAAE;UACPkB,OAAO,EAAEL,OAAO;UAChBM,aAAa,EAAE;QACjB,CAAC;QACDC,cAAc,EAAE,EAAE;QAClBC,kBAAkB,EAAE,IAAI;QACxBpB,KAAK,EAALA,KAAK;QACLqB,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,MAAM;MACLC,OAAO,CAACC,IAAI,CAACX,OAAO,CAAC;IACvB;EACF,CAAC;EACDY,SAAS,EAAE,SAAXA,SAASA,CAAE9B,EAAE,EAAI;IACf,IAAMkB,OAAO,GACX,kCAAkClB,EAAE,KAAK,GACzC,8DAA8D,GAC9D,8CAA8CA,EAAE,KAAK;IACvD4B,OAAO,CAACC,IAAI,CAACX,OAAO,CAAC;EACvB;AACF,CAAC;AAAC,IAAAa,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEapC,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}