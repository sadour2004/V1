{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInstanceHandle = getInstanceHandle;\nexports.getNativeElementReference = getNativeElementReference;\nexports.getNativeNodeReference = getNativeNodeReference;\nexports.getNativeTextReference = getNativeTextReference;\nexports.getOwnerDocument = getOwnerDocument;\nexports.getPublicInstanceFromInstanceHandle = getPublicInstanceFromInstanceHandle;\nexports.setInstanceHandle = setInstanceHandle;\nexports.setOwnerDocument = setOwnerDocument;\nvar _ReactNativeDocumentElementInstanceHandle = require(\"./ReactNativeDocumentElementInstanceHandle\");\nvar _ReactNativeDocumentInstanceHandle = require(\"./ReactNativeDocumentInstanceHandle\");\nvar RendererProxy;\nfunction getRendererProxy() {\n  if (RendererProxy == null) {\n    RendererProxy = require('../../../../../../Libraries/ReactNative/RendererProxy');\n  }\n  return RendererProxy;\n}\nvar INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\nvar OWNER_DOCUMENT_KEY = Symbol('ownerDocument');\nfunction getInstanceHandle(node) {\n  return node[INSTANCE_HANDLE_KEY];\n}\nfunction setInstanceHandle(node, instanceHandle) {\n  node[INSTANCE_HANDLE_KEY] = instanceHandle;\n}\nfunction getOwnerDocument(node) {\n  var _node$OWNER_DOCUMENT_;\n  return (_node$OWNER_DOCUMENT_ = node[OWNER_DOCUMENT_KEY]) != null ? _node$OWNER_DOCUMENT_ : null;\n}\nfunction setOwnerDocument(node, ownerDocument) {\n  node[OWNER_DOCUMENT_KEY] = ownerDocument;\n}\nfunction getPublicInstanceFromInstanceHandle(instanceHandle) {\n  if ((0, _ReactNativeDocumentInstanceHandle.isReactNativeDocumentInstanceHandle)(instanceHandle)) {\n    return (0, _ReactNativeDocumentInstanceHandle.getPublicInstanceFromReactNativeDocumentInstanceHandle)(instanceHandle);\n  }\n  if ((0, _ReactNativeDocumentElementInstanceHandle.isReactNativeDocumentElementInstanceHandle)(instanceHandle)) {\n    return (0, _ReactNativeDocumentElementInstanceHandle.getPublicInstanceFromReactNativeDocumentElementInstanceHandle)(instanceHandle);\n  }\n  var mixedPublicInstance = getRendererProxy().getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n  return mixedPublicInstance;\n}\nfunction getNativeNodeReference(node) {\n  var instanceHandle = getInstanceHandle(node);\n  if ((0, _ReactNativeDocumentInstanceHandle.isReactNativeDocumentInstanceHandle)(instanceHandle)) {\n    return (0, _ReactNativeDocumentInstanceHandle.getNativeNodeReferenceFromReactNativeDocumentInstanceHandle)(instanceHandle);\n  }\n  if ((0, _ReactNativeDocumentElementInstanceHandle.isReactNativeDocumentElementInstanceHandle)(instanceHandle)) {\n    return (0, _ReactNativeDocumentElementInstanceHandle.getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle)(instanceHandle);\n  }\n  return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);\n}\nfunction getNativeElementReference(node) {\n  var instanceHandle = getInstanceHandle(node);\n  return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);\n}\nfunction getNativeTextReference(node) {\n  var instanceHandle = getInstanceHandle(node);\n  return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);\n}","map":{"version":3,"names":["_ReactNativeDocumentElementInstanceHandle","require","_ReactNativeDocumentInstanceHandle","RendererProxy","getRendererProxy","INSTANCE_HANDLE_KEY","Symbol","OWNER_DOCUMENT_KEY","getInstanceHandle","node","setInstanceHandle","instanceHandle","getOwnerDocument","_node$OWNER_DOCUMENT_","setOwnerDocument","ownerDocument","getPublicInstanceFromInstanceHandle","isReactNativeDocumentInstanceHandle","getPublicInstanceFromReactNativeDocumentInstanceHandle","isReactNativeDocumentElementInstanceHandle","getPublicInstanceFromReactNativeDocumentElementInstanceHandle","mixedPublicInstance","getPublicInstanceFromInternalInstanceHandle","getNativeNodeReference","getNativeNodeReferenceFromReactNativeDocumentInstanceHandle","getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle","getNodeFromInternalInstanceHandle","getNativeElementReference","getNativeTextReference"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/src/private/webapis/dom/nodes/internals/NodeInternals.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {InternalInstanceHandle} from '../../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type ReactNativeDocument from '../ReactNativeDocument';\nimport type ReadOnlyCharacterData from '../ReadOnlyCharacterData';\nimport type ReadOnlyElement from '../ReadOnlyElement';\nimport type ReadOnlyNode from '../ReadOnlyNode';\nimport type {\n  NativeElementReference,\n  NativeNodeReference,\n  NativeTextReference,\n} from '../specs/NativeDOM';\nimport type {ReactNativeDocumentElementInstanceHandle} from './ReactNativeDocumentElementInstanceHandle';\nimport type {ReactNativeDocumentInstanceHandle} from './ReactNativeDocumentInstanceHandle';\n\nimport {\n  getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle,\n  getPublicInstanceFromReactNativeDocumentElementInstanceHandle,\n  isReactNativeDocumentElementInstanceHandle,\n} from './ReactNativeDocumentElementInstanceHandle';\nimport {\n  getNativeNodeReferenceFromReactNativeDocumentInstanceHandle,\n  getPublicInstanceFromReactNativeDocumentInstanceHandle,\n  isReactNativeDocumentInstanceHandle,\n} from './ReactNativeDocumentInstanceHandle';\n\nexport type InstanceHandle =\n  | InternalInstanceHandle // component managed by React\n  | ReactNativeDocumentElementInstanceHandle // root element managed by React Native\n  | ReactNativeDocumentInstanceHandle; // document node managed by React Native\n\nlet RendererProxy;\nfunction getRendererProxy() {\n  if (RendererProxy == null) {\n    // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n    // With a static import we can't use these classes for Paper-only variants.\n    RendererProxy = require('../../../../../../Libraries/ReactNative/RendererProxy');\n  }\n  return RendererProxy;\n}\n\nconst INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\nconst OWNER_DOCUMENT_KEY = Symbol('ownerDocument');\n\nexport function getInstanceHandle(node: ReadOnlyNode): InstanceHandle {\n  // $FlowExpectedError[prop-missing]\n  return node[INSTANCE_HANDLE_KEY];\n}\n\nexport function setInstanceHandle(\n  node: ReadOnlyNode,\n  instanceHandle: InstanceHandle,\n): void {\n  // $FlowExpectedError[prop-missing]\n  node[INSTANCE_HANDLE_KEY] = instanceHandle;\n}\n\nexport function getOwnerDocument(\n  node: ReadOnlyNode,\n): ReactNativeDocument | null {\n  // $FlowExpectedError[prop-missing]\n  return node[OWNER_DOCUMENT_KEY] ?? null;\n}\n\nexport function setOwnerDocument(\n  node: ReadOnlyNode,\n  ownerDocument: ReactNativeDocument | null,\n): void {\n  // $FlowExpectedError[prop-missing]\n  node[OWNER_DOCUMENT_KEY] = ownerDocument;\n}\n\nexport function getPublicInstanceFromInstanceHandle(\n  instanceHandle: InstanceHandle,\n): ?ReadOnlyNode {\n  if (isReactNativeDocumentInstanceHandle(instanceHandle)) {\n    return getPublicInstanceFromReactNativeDocumentInstanceHandle(\n      instanceHandle,\n    );\n  }\n\n  if (isReactNativeDocumentElementInstanceHandle(instanceHandle)) {\n    return getPublicInstanceFromReactNativeDocumentElementInstanceHandle(\n      instanceHandle,\n    );\n  }\n\n  const mixedPublicInstance =\n    getRendererProxy().getPublicInstanceFromInternalInstanceHandle(\n      instanceHandle,\n    );\n\n  // $FlowExpectedError[incompatible-return] React defines public instances as \"mixed\" because it can't access the definition from React Native.\n  return mixedPublicInstance;\n}\n\nexport function getNativeNodeReference(\n  node: ReadOnlyNode,\n): ?NativeNodeReference {\n  const instanceHandle = getInstanceHandle(node);\n\n  if (isReactNativeDocumentInstanceHandle(instanceHandle)) {\n    return getNativeNodeReferenceFromReactNativeDocumentInstanceHandle(\n      instanceHandle,\n    );\n  }\n\n  if (isReactNativeDocumentElementInstanceHandle(instanceHandle)) {\n    return getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle(\n      instanceHandle,\n    );\n  }\n\n  // $FlowExpectedError[incompatible-return]\n  return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);\n}\n\nexport function getNativeElementReference(\n  node: ReadOnlyElement,\n): ?NativeElementReference {\n  // $FlowExpectedError[incompatible-cast] We know ReadOnlyElement instances provide InternalInstanceHandle\n  const instanceHandle = getInstanceHandle(node) as InternalInstanceHandle;\n\n  // $FlowExpectedError[incompatible-return]\n  return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);\n}\n\nexport function getNativeTextReference(\n  node: ReadOnlyCharacterData,\n): ?NativeTextReference {\n  // $FlowExpectedError[incompatible-cast] We know ReadOnlyText instances provide InternalInstanceHandle\n  const instanceHandle = getInstanceHandle(node) as InternalInstanceHandle;\n\n  // $FlowExpectedError[incompatible-return]\n  return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);\n}\n"],"mappings":";;;;;;;;;;;AAuBA,IAAAA,yCAAA,GAAAC,OAAA;AAKA,IAAAC,kCAAA,GAAAD,OAAA;AAWA,IAAIE,aAAa;AACjB,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,IAAID,aAAa,IAAI,IAAI,EAAE;IAGzBA,aAAa,GAAGF,OAAO,CAAC,uDAAuD,CAAC;EAClF;EACA,OAAOE,aAAa;AACtB;AAEA,IAAME,mBAAmB,GAAGC,MAAM,CAAC,wBAAwB,CAAC;AAC5D,IAAMC,kBAAkB,GAAGD,MAAM,CAAC,eAAe,CAAC;AAE3C,SAASE,iBAAiBA,CAACC,IAAkB,EAAkB;EAEpE,OAAOA,IAAI,CAACJ,mBAAmB,CAAC;AAClC;AAEO,SAASK,iBAAiBA,CAC/BD,IAAkB,EAClBE,cAA8B,EACxB;EAENF,IAAI,CAACJ,mBAAmB,CAAC,GAAGM,cAAc;AAC5C;AAEO,SAASC,gBAAgBA,CAC9BH,IAAkB,EACU;EAAA,IAAAI,qBAAA;EAE5B,QAAAA,qBAAA,GAAOJ,IAAI,CAACF,kBAAkB,CAAC,YAAAM,qBAAA,GAAI,IAAI;AACzC;AAEO,SAASC,gBAAgBA,CAC9BL,IAAkB,EAClBM,aAAyC,EACnC;EAENN,IAAI,CAACF,kBAAkB,CAAC,GAAGQ,aAAa;AAC1C;AAEO,SAASC,mCAAmCA,CACjDL,cAA8B,EACf;EACf,IAAI,IAAAM,sEAAmC,EAACN,cAAc,CAAC,EAAE;IACvD,OAAO,IAAAO,yFAAsD,EAC3DP,cACF,CAAC;EACH;EAEA,IAAI,IAAAQ,oFAA0C,EAACR,cAAc,CAAC,EAAE;IAC9D,OAAO,IAAAS,uGAA6D,EAClET,cACF,CAAC;EACH;EAEA,IAAMU,mBAAmB,GACvBjB,gBAAgB,CAAC,CAAC,CAACkB,2CAA2C,CAC5DX,cACF,CAAC;EAGH,OAAOU,mBAAmB;AAC5B;AAEO,SAASE,sBAAsBA,CACpCd,IAAkB,EACI;EACtB,IAAME,cAAc,GAAGH,iBAAiB,CAACC,IAAI,CAAC;EAE9C,IAAI,IAAAQ,sEAAmC,EAACN,cAAc,CAAC,EAAE;IACvD,OAAO,IAAAa,8FAA2D,EAChEb,cACF,CAAC;EACH;EAEA,IAAI,IAAAQ,oFAA0C,EAACR,cAAc,CAAC,EAAE;IAC9D,OAAO,IAAAc,+GAAqE,EAC1Ed,cACF,CAAC;EACH;EAGA,OAAOP,gBAAgB,CAAC,CAAC,CAACsB,iCAAiC,CAACf,cAAc,CAAC;AAC7E;AAEO,SAASgB,yBAAyBA,CACvClB,IAAqB,EACI;EAEzB,IAAME,cAAc,GAAGH,iBAAiB,CAACC,IAAI,CAA2B;EAGxE,OAAOL,gBAAgB,CAAC,CAAC,CAACsB,iCAAiC,CAACf,cAAc,CAAC;AAC7E;AAEO,SAASiB,sBAAsBA,CACpCnB,IAA2B,EACL;EAEtB,IAAME,cAAc,GAAGH,iBAAiB,CAACC,IAAI,CAA2B;EAGxE,OAAOL,gBAAgB,CAAC,CAAC,CAACsB,iCAAiC,CAACf,cAAc,CAAC;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}