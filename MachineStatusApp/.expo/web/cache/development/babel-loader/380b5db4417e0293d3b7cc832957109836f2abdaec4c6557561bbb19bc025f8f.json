{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _NodeInternals = require(\"./internals/NodeInternals\");\nvar _Traversal = require(\"./internals/Traversal\");\nvar _ReadOnlyNode2 = _interopRequireDefault(require(\"./ReadOnlyNode\"));\nvar _NativeDOM = _interopRequireDefault(require(\"./specs/NativeDOM\"));\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar ReadOnlyCharacterData = exports.default = function (_ReadOnlyNode) {\n  function ReadOnlyCharacterData() {\n    (0, _classCallCheck2.default)(this, ReadOnlyCharacterData);\n    return _callSuper(this, ReadOnlyCharacterData, arguments);\n  }\n  (0, _inherits2.default)(ReadOnlyCharacterData, _ReadOnlyNode);\n  return (0, _createClass2.default)(ReadOnlyCharacterData, [{\n    key: \"nextElementSibling\",\n    get: function get() {\n      return (0, _Traversal.getElementSibling)(this, 'next');\n    }\n  }, {\n    key: \"previousElementSibling\",\n    get: function get() {\n      return (0, _Traversal.getElementSibling)(this, 'previous');\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      var node = (0, _NodeInternals.getNativeTextReference)(this);\n      if (node != null) {\n        return _NativeDOM.default.getTextContent(node);\n      }\n      return '';\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.data.length;\n    }\n  }, {\n    key: \"textContent\",\n    get: function get() {\n      return this.data;\n    }\n  }, {\n    key: \"nodeValue\",\n    get: function get() {\n      return this.data;\n    }\n  }, {\n    key: \"substringData\",\n    value: function substringData(offset, count) {\n      var data = this.data;\n      if (offset < 0) {\n        throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`);\n      }\n      if (offset > data.length) {\n        throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`);\n      }\n      var adjustedCount = count < 0 || count > data.length ? data.length : count;\n      return data.slice(offset, offset + adjustedCount);\n    }\n  }]);\n}(_ReadOnlyNode2.default);","map":{"version":3,"names":["_NodeInternals","require","_Traversal","_ReadOnlyNode2","_interopRequireDefault","_NativeDOM","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","ReadOnlyCharacterData","exports","_ReadOnlyNode","_classCallCheck2","arguments","_inherits2","_createClass2","key","get","getElementSibling","node","getNativeTextReference","NativeDOM","getTextContent","data","length","value","substringData","offset","count","TypeError","adjustedCount","slice","ReadOnlyNode"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyCharacterData.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport {getNativeTextReference} from './internals/NodeInternals';\nimport {getElementSibling} from './internals/Traversal';\nimport ReadOnlyNode from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\n\nexport default class ReadOnlyCharacterData extends ReadOnlyNode {\n  get nextElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'next');\n  }\n\n  get previousElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'previous');\n  }\n\n  get data(): string {\n    const node = getNativeTextReference(this);\n\n    if (node != null) {\n      return NativeDOM.getTextContent(node);\n    }\n\n    return '';\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  /**\n   * @override\n   */\n  get textContent(): string {\n    return this.data;\n  }\n\n  /**\n   * @override\n   */\n  get nodeValue(): string {\n    return this.data;\n  }\n\n  substringData(offset: number, count: number): string {\n    const data = this.data;\n    if (offset < 0) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`,\n      );\n    }\n    if (offset > data.length) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`,\n      );\n    }\n    let adjustedCount = count < 0 || count > data.length ? data.length : count;\n    return data.slice(offset, offset + adjustedCount);\n  }\n}\n"],"mappings":";;;;;;;;;;AAcA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,UAAA,GAAAD,sBAAA,CAAAH,OAAA;AAA0C,SAAAK,WAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,WAAAD,CAAA,OAAAE,gBAAA,CAAAC,OAAA,EAAAH,CAAA,OAAAI,2BAAA,CAAAD,OAAA,EAAAJ,CAAA,EAAAM,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAP,CAAA,EAAAC,CAAA,YAAAC,gBAAA,CAAAC,OAAA,EAAAJ,CAAA,EAAAS,WAAA,IAAAR,CAAA,CAAAS,KAAA,CAAAV,CAAA,EAAAE,CAAA;AAAA,SAAAI,0BAAA,cAAAN,CAAA,IAAAW,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAP,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAX,CAAA,aAAAM,yBAAA,YAAAA,0BAAA,aAAAN,CAAA;AAAA,IAErBe,qBAAqB,GAAAC,OAAA,CAAAZ,OAAA,aAAAa,aAAA;EAAA,SAAAF,sBAAA;IAAA,IAAAG,gBAAA,CAAAd,OAAA,QAAAW,qBAAA;IAAA,OAAAhB,UAAA,OAAAgB,qBAAA,EAAAI,SAAA;EAAA;EAAA,IAAAC,UAAA,CAAAhB,OAAA,EAAAW,qBAAA,EAAAE,aAAA;EAAA,WAAAI,aAAA,CAAAjB,OAAA,EAAAW,qBAAA;IAAAO,GAAA;IAAAC,GAAA,EACxC,SAAAA,IAAA,EAAiD;MAC/C,OAAO,IAAAC,4BAAiB,EAAC,IAAI,EAAE,MAAM,CAAC;IACxC;EAAC;IAAAF,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAqD;MACnD,OAAO,IAAAC,4BAAiB,EAAC,IAAI,EAAE,UAAU,CAAC;IAC5C;EAAC;IAAAF,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAmB;MACjB,IAAME,IAAI,GAAG,IAAAC,qCAAsB,EAAC,IAAI,CAAC;MAEzC,IAAID,IAAI,IAAI,IAAI,EAAE;QAChB,OAAOE,kBAAS,CAACC,cAAc,CAACH,IAAI,CAAC;MACvC;MAEA,OAAO,EAAE;IACX;EAAC;IAAAH,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAqB;MACnB,OAAO,IAAI,CAACM,IAAI,CAACC,MAAM;IACzB;EAAC;IAAAR,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAA0B;MACxB,OAAO,IAAI,CAACM,IAAI;IAClB;EAAC;IAAAP,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAAwB;MACtB,OAAO,IAAI,CAACM,IAAI;IAClB;EAAC;IAAAP,GAAA;IAAAS,KAAA,EAED,SAAAC,aAAaA,CAACC,MAAc,EAAEC,KAAa,EAAU;MACnD,IAAML,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAII,MAAM,GAAG,CAAC,EAAE;QACd,MAAM,IAAIE,SAAS,CACjB,oEAAoEF,MAAM,eAC5E,CAAC;MACH;MACA,IAAIA,MAAM,GAAGJ,IAAI,CAACC,MAAM,EAAE;QACxB,MAAM,IAAIK,SAAS,CACjB,oEAAoEF,MAAM,uCAAuCJ,IAAI,CAACC,MAAM,IAC9H,CAAC;MACH;MACA,IAAIM,aAAa,GAAGF,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGL,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM,GAAGI,KAAK;MAC1E,OAAOL,IAAI,CAACQ,KAAK,CAACJ,MAAM,EAAEA,MAAM,GAAGG,aAAa,CAAC;IACnD;EAAC;AAAA,EAnDgDE,sBAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}