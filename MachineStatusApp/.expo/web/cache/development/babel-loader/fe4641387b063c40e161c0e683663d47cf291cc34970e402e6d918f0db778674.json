{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _ExceptionsManager = _interopRequireWildcard(require(\"./ExceptionsManager\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar ReactFiberErrorDialog = {\n  showErrorDialog: function showErrorDialog(_ref) {\n    var componentStack = _ref.componentStack,\n      errorValue = _ref.error;\n    var error;\n    if (errorValue instanceof Error) {\n      error = errorValue;\n    } else if (typeof errorValue === 'string') {\n      error = new _ExceptionsManager.SyntheticError(errorValue);\n    } else {\n      error = new _ExceptionsManager.SyntheticError('Unspecified error');\n    }\n    try {\n      error.componentStack = componentStack;\n      error.isComponentError = true;\n    } catch (_unused) {}\n    _ExceptionsManager.default.handleException(error, false);\n    return false;\n  }\n};\nvar _default = exports.default = ReactFiberErrorDialog;","map":{"version":3,"names":["_ExceptionsManager","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ReactFiberErrorDialog","showErrorDialog","_ref","componentStack","errorValue","error","Error","SyntheticError","isComponentError","_unused","ExceptionsManager","handleException","_default","exports"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/Core/ReactFiberErrorDialog.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ExtendedError} from './ExtendedError';\n\nimport ExceptionsManager, {SyntheticError} from './ExceptionsManager';\n\nexport type CapturedError = {\n  +componentStack: string,\n  +error: mixed,\n  +errorBoundary: ?{...},\n  ...\n};\n\nconst ReactFiberErrorDialog = {\n  /**\n   * Intercept lifecycle errors and ensure they are shown with the correct stack\n   * trace within the native redbox component.\n   */\n  showErrorDialog({componentStack, error: errorValue}: CapturedError): boolean {\n    let error: ?ExtendedError;\n\n    // Typically, `errorValue` should be an error. However, other values such as\n    // strings (or even null) are sometimes thrown.\n    if (errorValue instanceof Error) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (errorValue: ExtendedError);\n    } else if (typeof errorValue === 'string') {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (new SyntheticError(errorValue): ExtendedError);\n    } else {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (new SyntheticError('Unspecified error'): ExtendedError);\n    }\n    try {\n      error.componentStack = componentStack;\n      error.isComponentError = true;\n    } catch {\n      // Ignored.\n    }\n\n    ExceptionsManager.handleException(error, false);\n\n    // Return false here to prevent ReactFiberErrorLogger default behavior of\n    // logging error details to console.error. Calls to console.error are\n    // automatically routed to the native redbox controller, which we've already\n    // done above by calling ExceptionsManager.\n    return false;\n  },\n};\n\nexport default ReactFiberErrorDialog;\n"],"mappings":";;;;AAYA,IAAAA,kBAAA,GAAAC,uBAAA,CAAAC,OAAA;AAAsE,SAAAD,wBAAAE,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAJ,uBAAA,YAAAA,wBAAAE,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAStE,IAAMmB,qBAAqB,GAAG;EAK5BC,eAAe,WAAfA,eAAeA,CAAAC,IAAA,EAA8D;IAAA,IAA5DC,cAAc,GAAAD,IAAA,CAAdC,cAAc;MAASC,UAAU,GAAAF,IAAA,CAAjBG,KAAK;IACpC,IAAIA,KAAqB;IAIzB,IAAID,UAAU,YAAYE,KAAK,EAAE;MAI/BD,KAAK,GAAID,UAA0B;IACrC,CAAC,MAAM,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;MAIzCC,KAAK,GAAI,IAAIE,iCAAc,CAACH,UAAU,CAAiB;IACzD,CAAC,MAAM;MAILC,KAAK,GAAI,IAAIE,iCAAc,CAAC,mBAAmB,CAAiB;IAClE;IACA,IAAI;MACFF,KAAK,CAACF,cAAc,GAAGA,cAAc;MACrCE,KAAK,CAACG,gBAAgB,GAAG,IAAI;IAC/B,CAAC,CAAC,OAAAC,OAAA,EAAM,CAER;IAEAC,0BAAiB,CAACC,eAAe,CAACN,KAAK,EAAE,KAAK,CAAC;IAM/C,OAAO,KAAK;EACd;AACF,CAAC;AAAC,IAAAO,QAAA,GAAAC,OAAA,CAAAvB,OAAA,GAEaU,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}