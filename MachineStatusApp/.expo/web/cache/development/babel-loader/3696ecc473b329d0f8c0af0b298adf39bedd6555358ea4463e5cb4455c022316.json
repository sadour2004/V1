{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = void 0;\nvar _codegenNativeCommands = _interopRequireDefault(require(\"../../../../Libraries/Utilities/codegenNativeCommands\"));\nvar _codegenNativeComponent = _interopRequireDefault(require(\"../../../../Libraries/Utilities/codegenNativeComponent\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nvar _require = require('react-native/Libraries/NativeComponent/ViewConfigIgnore'),\n  ConditionallyIgnoredEventHandlers = _require.ConditionallyIgnoredEventHandlers;\nvar _require2 = require(\"react-native/Libraries/ReactNative/RendererProxy\"),\n  dispatchCommand = _require2.dispatchCommand;\nvar nativeComponentName = 'AndroidSwipeRefreshLayout';\nvar __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {\n  uiViewClassName: \"AndroidSwipeRefreshLayout\",\n  directEventTypes: {\n    topRefresh: {\n      registrationName: \"onRefresh\"\n    }\n  },\n  validAttributes: Object.assign({\n    enabled: true,\n    colors: {\n      process: function (req) {\n        return 'default' in req ? req.default : req;\n      }(require('react-native/Libraries/StyleSheet/processColorArray'))\n    },\n    progressBackgroundColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    size: true,\n    progressViewOffset: true,\n    refreshing: true\n  }, ConditionallyIgnoredEventHandlers({\n    onRefresh: true\n  }))\n};\nvar _default = exports.default = NativeComponentRegistry.get(nativeComponentName, function () {\n  return __INTERNAL_VIEW_CONFIG;\n});\nvar Commands = exports.Commands = {\n  setNativeRefreshing: function setNativeRefreshing(ref, value) {\n    dispatchCommand(ref, \"setNativeRefreshing\", [value]);\n  }\n};","map":{"version":3,"names":["_codegenNativeCommands","_interopRequireDefault","require","_codegenNativeComponent","React","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","NativeComponentRegistry","_require","ConditionallyIgnoredEventHandlers","_require2","dispatchCommand","nativeComponentName","__INTERNAL_VIEW_CONFIG","exports","uiViewClassName","directEventTypes","topRefresh","registrationName","validAttributes","assign","enabled","colors","process","req","progressBackgroundColor","size","progressViewOffset","refreshing","onRefresh","_default","Commands","setNativeRefreshing","ref","value"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/src/private/specs_DEPRECATED/components/AndroidSwipeRefreshLayoutNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\nimport type {HostComponent} from '../../types/HostComponent';\n\nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype NativeProps = $ReadOnly<{\n  ...ViewProps,\n\n  /**\n   * Whether the pull to refresh functionality is enabled.\n   */\n  enabled?: WithDefault<boolean, true>,\n  /**\n   * The colors (at least one) that will be used to draw the refresh indicator.\n   */\n  colors?: ?$ReadOnlyArray<ColorValue>,\n  /**\n   * The background color of the refresh indicator.\n   */\n  progressBackgroundColor?: ?ColorValue,\n  /**\n   * Size of the refresh indicator.\n   */\n  size?: WithDefault<'default' | 'large', 'default'>,\n  /**\n   * Progress view top offset\n   */\n  progressViewOffset?: WithDefault<Float, 0>,\n\n  /**\n   * Called when the view starts refreshing.\n   */\n  onRefresh?: ?DirectEventHandler<null>,\n\n  /**\n   * Whether the view should be indicating an active refresh.\n   */\n  refreshing: boolean,\n}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeRefreshing: (\n    viewRef: React.ElementRef<NativeType>,\n    value: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeRefreshing'],\n});\n\nexport default (codegenNativeComponent<NativeProps>(\n  'AndroidSwipeRefreshLayout',\n): NativeType);\n"],"mappings":";;;;;AAmBA,IAAAA,sBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAC,uBAAA,CAAAH,OAAA;AAA+B,SAAAG,wBAAAC,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAH,uBAAA,YAAAA,wBAAAC,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAkD/B,IAAAmB,uBAEe,GAFfxB,OAEe,CAFf,gEAEc,CAAC;AAFf,IAAAyB,QAAA,GAAAzB,OAEe,CAFf,yDAEc,CAAC;EAFf0B,iCAEe,GAAAD,QAAA,CAFfC,iCAEe;AAFf,IAAAC,SAAA,GAAA3B,OAEe,CAFf,kDAEc,CAAC;EAFf4B,eAEe,GAAAD,SAAA,CAFfC,eAEe;AAFf,IAAAC,mBAEe,GAFf,2BAEe;AAFf,IAAAC,sBAEe,GAAAC,OAAA,CAAAD,sBAAA,GAFf;EAAAE,eAEe,EAFf,2BAEe;EAFfC,gBAEe,EAFf;IAAAC,UAEe,EAFf;MAAAC,gBAEe,EAFf;IAEc;EAAA,CAAC;EAFfC,eAEe,EAAAf,MAAA,CAAAgB,MAAA;IAFfC,OAEe,EAFf,IAEe;IAFfC,MAEe,EAFf;MAAAC,OAEe,EAFf,UAAAC,GAEe;QAAA,OAFf,SAEe,IAFfA,GAEe,GAFfA,GAEe,CAFf3B,OAEe,GAFf2B,GAEe;MAAA,EAFfzC,OAEe,CAFf,qDAEc;IAAA,CAAC;IAFf0C,uBAEe,EAFf;MAAAF,OAEe,EAFfxC,OAEe,CAFf,gDAEc,CAAC,CAFfc;IAEc,CAAC;IAFf6B,IAEe,EAFf,IAEe;IAFfC,kBAEe,EAFf,IAEe;IAFfC,UAEe,EAFf;EAEe,GAFfnB,iCAEe,CAFf;IAAAoB,SAEe,EAFf;EAEc,EAAC;AAAD,CAAC;AAAA,IAAAC,QAAA,GAAAhB,OAAA,CAAAjB,OAAA,GAFfU,uBAEe,CAFfR,GAEe,CAFfa,mBAEe,EAFf;EAAA,OAAAC,sBAEe;AAAA,CAAD,CAAC;AAFf,IAAAkB,QAEe,GAAAjB,OAAA,CAAAiB,QAAA,GAFf;EAAAC,mBAEe,WAFfA,mBAEeA,CAFfC,GAEe,EAFfC,KAEe,EAFf;IAAAvB,eAEe,CAFfsB,GAEe,EAFf,qBAEe,EAFf,CAAAC,KAEe,CAAD,CAAC;EAAD;AAAA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}