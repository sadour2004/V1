{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _processBoxShadow = _interopRequireDefault(require(\"../StyleSheet/processBoxShadow\"));\nvar ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes').default;\nvar resolveAssetSource = require('../Image/resolveAssetSource').default;\nvar processBackgroundImage = require('../StyleSheet/processBackgroundImage').default;\nvar processColor = require('../StyleSheet/processColor').default;\nvar processColorArray = require('../StyleSheet/processColorArray').default;\nvar processFilter = require('../StyleSheet/processFilter').default;\nvar insetsDiffer = require('../Utilities/differ/insetsDiffer').default;\nvar matricesDiffer = require('../Utilities/differ/matricesDiffer').default;\nvar pointsDiffer = require('../Utilities/differ/pointsDiffer').default;\nvar sizesDiffer = require('../Utilities/differ/sizesDiffer').default;\nvar UIManager = require('./UIManager').default;\nvar nullthrows = require('nullthrows');\nfunction getNativeComponentAttributes(uiViewClassName) {\n  var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n  if (viewConfig == null) {\n    return null;\n  }\n  var baseModuleName = viewConfig.baseModuleName,\n    bubblingEventTypes = viewConfig.bubblingEventTypes,\n    directEventTypes = viewConfig.directEventTypes;\n  var nativeProps = viewConfig.NativeProps;\n  bubblingEventTypes = bubblingEventTypes != null ? bubblingEventTypes : {};\n  directEventTypes = directEventTypes != null ? directEventTypes : {};\n  while (baseModuleName) {\n    var baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = Object.assign({}, baseModule.bubblingEventTypes, bubblingEventTypes);\n      directEventTypes = Object.assign({}, baseModule.directEventTypes, directEventTypes);\n      nativeProps = Object.assign({}, baseModule.NativeProps, nativeProps);\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n  var validAttributes = {};\n  for (var key in nativeProps) {\n    var typeName = nativeProps[key];\n    var diff = getDifferForType(typeName);\n    var process = getProcessorForType(typeName);\n    validAttributes[key] = diff == null ? process == null ? true : {\n      process: process\n    } : process == null ? {\n      diff: diff\n    } : {\n      diff: diff,\n      process: process\n    };\n  }\n  validAttributes.style = ReactNativeStyleAttributes;\n  Object.assign(viewConfig, {\n    uiViewClassName: uiViewClassName,\n    validAttributes: validAttributes,\n    bubblingEventTypes: bubblingEventTypes,\n    directEventTypes: directEventTypes\n  });\n  attachDefaultEventTypes(viewConfig);\n  return viewConfig;\n}\nfunction attachDefaultEventTypes(viewConfig) {\n  var constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    viewConfig = merge(viewConfig, nullthrows(UIManager.getDefaultEventTypes)());\n  } else {\n    viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);\n    viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);\n  }\n}\nfunction merge(destination, source) {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n  for (var key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n    var sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      var destinationValue = destination[key];\n      if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\nfunction getDifferForType(typeName) {\n  switch (typeName) {\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    case 'Point':\n      return pointsDiffer;\n    case 'EdgeInsets':\n      return insetsDiffer;\n  }\n  return null;\n}\nfunction getProcessorForType(typeName) {\n  switch (typeName) {\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    case 'BoxShadowArray':\n      return _processBoxShadow.default;\n    case 'FilterArray':\n      return processFilter;\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n    case 'Filter':\n      return processFilter;\n    case 'BackgroundImage':\n      return processBackgroundImage;\n    case 'ImageSource':\n      return resolveAssetSource;\n    case 'BoxShadow':\n      return _processBoxShadow.default;\n  }\n  return null;\n}\nvar _default = exports.default = getNativeComponentAttributes;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_processBoxShadow","ReactNativeStyleAttributes","resolveAssetSource","processBackgroundImage","processColor","processColorArray","processFilter","insetsDiffer","matricesDiffer","pointsDiffer","sizesDiffer","UIManager","nullthrows","getNativeComponentAttributes","uiViewClassName","viewConfig","getViewManagerConfig","baseModuleName","bubblingEventTypes","directEventTypes","nativeProps","NativeProps","baseModule","assign","validAttributes","key","typeName","diff","getDifferForType","process","getProcessorForType","style","attachDefaultEventTypes","constants","getConstants","ViewManagerNames","LazyViewManagersEnabled","merge","getDefaultEventTypes","genericBubblingEventTypes","genericDirectEventTypes","destination","source","hasOwnProperty","sourceValue","destinationValue","processBoxShadow","_default"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport processBoxShadow from '../StyleSheet/processBoxShadow';\n\nconst ReactNativeStyleAttributes =\n  require('../Components/View/ReactNativeStyleAttributes').default;\nconst resolveAssetSource = require('../Image/resolveAssetSource').default;\nconst processBackgroundImage =\n  require('../StyleSheet/processBackgroundImage').default;\nconst processColor = require('../StyleSheet/processColor').default;\nconst processColorArray = require('../StyleSheet/processColorArray').default;\nconst processFilter = require('../StyleSheet/processFilter').default;\nconst insetsDiffer = require('../Utilities/differ/insetsDiffer').default;\nconst matricesDiffer = require('../Utilities/differ/matricesDiffer').default;\nconst pointsDiffer = require('../Utilities/differ/pointsDiffer').default;\nconst sizesDiffer = require('../Utilities/differ/sizesDiffer').default;\nconst UIManager = require('./UIManager').default;\nconst nullthrows = require('nullthrows');\n\nfunction getNativeComponentAttributes(uiViewClassName: string): any {\n  const viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n\n  if (viewConfig == null) {\n    return null;\n  }\n\n  // TODO: This seems like a whole lot of runtime initialization for every\n  // native component that can be either avoided or simplified.\n  let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;\n  let nativeProps = viewConfig.NativeProps;\n\n  bubblingEventTypes = bubblingEventTypes ?? {};\n  directEventTypes = directEventTypes ?? {};\n\n  while (baseModuleName) {\n    const baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = {\n        ...baseModule.bubblingEventTypes,\n        ...bubblingEventTypes,\n      };\n      directEventTypes = {\n        ...baseModule.directEventTypes,\n        ...directEventTypes,\n      };\n      nativeProps = {\n        ...baseModule.NativeProps,\n        ...nativeProps,\n      };\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n\n  const validAttributes: {[string]: mixed} = {};\n\n  for (const key in nativeProps) {\n    const typeName = nativeProps[key];\n    const diff = getDifferForType(typeName);\n    const process = getProcessorForType(typeName);\n\n    // If diff or process == null, omit the corresponding property from the Attribute\n    // Why:\n    //  1. Consistency with AttributeType flow type\n    //  2. Consistency with Static View Configs, which omit the null properties\n    validAttributes[key] =\n      diff == null\n        ? process == null\n          ? true\n          : {process}\n        : process == null\n          ? {diff}\n          : {diff, process};\n  }\n\n  // Unfortunately, the current setup declares style properties as top-level\n  // props. This makes it so we allow style properties in the `style` prop.\n  // TODO: Move style properties into a `style` prop and disallow them as\n  // top-level props on the native side.\n  validAttributes.style = ReactNativeStyleAttributes;\n\n  Object.assign(viewConfig, {\n    uiViewClassName,\n    validAttributes,\n    bubblingEventTypes,\n    directEventTypes,\n  });\n\n  attachDefaultEventTypes(viewConfig);\n\n  return viewConfig;\n}\n\nfunction attachDefaultEventTypes(viewConfig: any) {\n  // This is supported on UIManager platforms (ex: Android),\n  // as lazy view managers are not implemented for all platforms.\n  // See [UIManager] for details on constants and implementations.\n  const constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    // Lazy view managers enabled.\n    viewConfig = merge(\n      viewConfig,\n      nullthrows(UIManager.getDefaultEventTypes)(),\n    );\n  } else {\n    viewConfig.bubblingEventTypes = merge(\n      viewConfig.bubblingEventTypes,\n      constants.genericBubblingEventTypes,\n    );\n    viewConfig.directEventTypes = merge(\n      viewConfig.directEventTypes,\n      constants.genericDirectEventTypes,\n    );\n  }\n}\n\n// TODO: Figure out how to avoid all this runtime initialization cost.\nfunction merge(destination: ?Object, source: ?Object): ?Object {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n\n  for (const key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n\n    let sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      const destinationValue = destination[key];\n      if (\n        typeof sourceValue === 'object' &&\n        typeof destinationValue === 'object'\n      ) {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\n\nfunction getDifferForType(\n  typeName: string,\n): ?(prevProp: any, nextProp: any) => boolean {\n  switch (typeName) {\n    // iOS Types\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    // Android Types\n    case 'Point':\n      return pointsDiffer;\n    case 'EdgeInsets':\n      return insetsDiffer;\n  }\n  return null;\n}\n\nfunction getProcessorForType(typeName: string): ?(nextProp: any) => any {\n  switch (typeName) {\n    // iOS Types\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    case 'BoxShadowArray':\n      return processBoxShadow;\n    case 'FilterArray':\n      return processFilter;\n    // Android Types\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n    case 'Filter':\n      return processFilter;\n    case 'BackgroundImage':\n      return processBackgroundImage;\n    case 'ImageSource':\n      return resolveAssetSource;\n    case 'BoxShadow':\n      return processBoxShadow;\n  }\n  return null;\n}\n\nexport default getNativeComponentAttributes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}