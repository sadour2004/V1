{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = void 0;\nvar _codegenNativeCommands = _interopRequireDefault(require(\"../../../../Libraries/Utilities/codegenNativeCommands\"));\nvar _codegenNativeComponent = _interopRequireDefault(require(\"../../../../Libraries/Utilities/codegenNativeComponent\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nvar _require = require('react-native/Libraries/NativeComponent/ViewConfigIgnore'),\n  ConditionallyIgnoredEventHandlers = _require.ConditionallyIgnoredEventHandlers;\nvar _require2 = require(\"react-native/Libraries/ReactNative/RendererProxy\"),\n  dispatchCommand = _require2.dispatchCommand;\nvar nativeComponentName = 'RCTRefreshControl';\nvar __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {\n  uiViewClassName: \"RCTRefreshControl\",\n  directEventTypes: {\n    topRefresh: {\n      registrationName: \"onRefresh\"\n    }\n  },\n  validAttributes: Object.assign({\n    tintColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    titleColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    title: true,\n    progressViewOffset: true,\n    refreshing: true\n  }, ConditionallyIgnoredEventHandlers({\n    onRefresh: true\n  }))\n};\nvar _default = exports.default = NativeComponentRegistry.get(nativeComponentName, function () {\n  return __INTERNAL_VIEW_CONFIG;\n});\nvar Commands = exports.Commands = {\n  setNativeRefreshing: function setNativeRefreshing(ref, refreshing) {\n    dispatchCommand(ref, \"setNativeRefreshing\", [refreshing]);\n  }\n};","map":{"version":3,"names":["_codegenNativeCommands","_interopRequireDefault","require","_codegenNativeComponent","React","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","NativeComponentRegistry","_require","ConditionallyIgnoredEventHandlers","_require2","dispatchCommand","nativeComponentName","__INTERNAL_VIEW_CONFIG","exports","uiViewClassName","directEventTypes","topRefresh","registrationName","validAttributes","assign","tintColor","process","titleColor","title","progressViewOffset","refreshing","onRefresh","_default","Commands","setNativeRefreshing","ref"],"sources":["/Users/ayoubsadour/Desktop/APPMOBILE/MachineStatusApp/node_modules/react-native/src/private/specs_DEPRECATED/components/PullToRefreshViewNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\nimport type {HostComponent} from '../../types/HostComponent';\n\nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype NativeProps = $ReadOnly<{\n  ...ViewProps,\n\n  /**\n   * The color of the refresh indicator.\n   */\n  tintColor?: ?ColorValue,\n  /**\n   * Title color.\n   */\n  titleColor?: ?ColorValue,\n  /**\n   * The title displayed under the refresh indicator.\n   */\n  title?: WithDefault<string, null>,\n  /**\n   * Progress view top offset\n   */\n  progressViewOffset?: WithDefault<Float, 0>,\n\n  /**\n   * Called when the view starts refreshing.\n   */\n  onRefresh?: ?DirectEventHandler<null>,\n\n  /**\n   * Whether the view should be indicating an active refresh.\n   */\n  refreshing: boolean,\n}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeRefreshing: (\n    viewRef: React.ElementRef<ComponentType>,\n    refreshing: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeRefreshing'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('PullToRefreshView', {\n  paperComponentName: 'RCTRefreshControl',\n  excludedPlatforms: ['android'],\n}): HostComponent<NativeProps>);\n"],"mappings":";;;;;AAmBA,IAAAA,sBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAC,uBAAA,CAAAH,OAAA;AAA+B,SAAAG,wBAAAC,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAH,uBAAA,YAAAA,wBAAAC,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AA8C/B,IAAAmB,uBAGgC,GAHhCxB,OAGgC,CAHhC,gEAG+B,CAAC;AAHhC,IAAAyB,QAAA,GAAAzB,OAGgC,CAHhC,yDAG+B,CAAC;EAHhC0B,iCAGgC,GAAAD,QAAA,CAHhCC,iCAGgC;AAHhC,IAAAC,SAAA,GAAA3B,OAGgC,CAHhC,kDAG+B,CAAC;EAHhC4B,eAGgC,GAAAD,SAAA,CAHhCC,eAGgC;AAHhC,IAAAC,mBAGgC,GAHhC,mBAGgC;AAHhC,IAAAC,sBAGgC,GAAAC,OAAA,CAAAD,sBAAA,GAHhC;EAAAE,eAGgC,EAHhC,mBAGgC;EAHhCC,gBAGgC,EAHhC;IAAAC,UAGgC,EAHhC;MAAAC,gBAGgC,EAHhC;IAG+B;EAAA,CAAC;EAHhCC,eAGgC,EAAAf,MAAA,CAAAgB,MAAA;IAHhCC,SAGgC,EAHhC;MAAAC,OAGgC,EAHhCvC,OAGgC,CAHhC,gDAG+B,CAAC,CAHhCc;IAG+B,CAAC;IAHhC0B,UAGgC,EAHhC;MAAAD,OAGgC,EAHhCvC,OAGgC,CAHhC,gDAG+B,CAAC,CAHhCc;IAG+B,CAAC;IAHhC2B,KAGgC,EAHhC,IAGgC;IAHhCC,kBAGgC,EAHhC,IAGgC;IAHhCC,UAGgC,EAHhC;EAGgC,GAHhCjB,iCAGgC,CAHhC;IAAAkB,SAGgC,EAHhC;EAG+B,EAAC;AAAD,CAAC;AAAA,IAAAC,QAAA,GAAAd,OAAA,CAAAjB,OAAA,GAHhCU,uBAGgC,CAHhCR,GAGgC,CAHhCa,mBAGgC,EAHhC;EAAA,OAAAC,sBAGgC;AAAA,CAAD,CAAC;AAHhC,IAAAgB,QAGgC,GAAAf,OAAA,CAAAe,QAAA,GAHhC;EAAAC,mBAGgC,WAHhCA,mBAGgCA,CAHhCC,GAGgC,EAHhCL,UAGgC,EAHhC;IAAAf,eAGgC,CAHhCoB,GAGgC,EAHhC,qBAGgC,EAHhC,CAAAL,UAGgC,CAAD,CAAC;EAAD;AAAA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}